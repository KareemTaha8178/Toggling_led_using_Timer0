

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 30 20:10:40 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,inline
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,inline
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,inline
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Version 2.40
    42                           ; Generated 17/11/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4620 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000000                     
    77                           	psect	idataCOMRAM
    78   0017CA                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for _port_register
    82   0017CA  80                 	db	128
    83   0017CB  0F                 	db	15
    84   0017CC  81                 	db	129
    85   0017CD  0F                 	db	15
    86   0017CE  82                 	db	130
    87   0017CF  0F                 	db	15
    88   0017D0  83                 	db	131
    89   0017D1  0F                 	db	15
    90   0017D2  84                 	db	132
    91   0017D3  0F                 	db	15
    92                           
    93                           ;initializer for _lat_register
    94   0017D4  89                 	db	137
    95   0017D5  0F                 	db	15
    96   0017D6  8A                 	db	138
    97   0017D7  0F                 	db	15
    98   0017D8  8B                 	db	139
    99   0017D9  0F                 	db	15
   100   0017DA  8C                 	db	140
   101   0017DB  0F                 	db	15
   102   0017DC  8D                 	db	141
   103   0017DD  0F                 	db	15
   104                           
   105                           ;initializer for _tris_register
   106   0017DE  92                 	db	146
   107   0017DF  0F                 	db	15
   108   0017E0  93                 	db	147
   109   0017E1  0F                 	db	15
   110   0017E2  94                 	db	148
   111   0017E3  0F                 	db	15
   112   0017E4  95                 	db	149
   113   0017E5  0F                 	db	15
   114   0017E6  96                 	db	150
   115   0017E7  0F                 	db	15
   116                           
   117                           ;initializer for _ret
   118   0017E8  01                 	db	1
   119                           
   120                           ;initializer for _timer0_obj
   121   0017E9  F4                 	db	low _timer0_defaultHandler
   122   0017EA  17                 	db	high _timer0_defaultHandler
   123   0017EB  00                 	db	0
   124   0017EC  02                 	db	2
   125   0017ED  0BDC               	dw	3036
   126   0017EF  0A                 	db	10
   127                           
   128                           ;initializer for _led3
   129   0017F0  22                 	db	34
   130                           
   131                           ;initializer for _led2
   132   0017F1  12                 	db	18
   133                           
   134                           ;initializer for _led1
   135   0017F2  02                 	db	2
   136                           
   137                           	psect	smallconst
   138   001000                     __psmallconst:
   139                           	callstack 0
   140   001000  00                 	db	0
   141   001001  37                 	db	55
   142   001002  38                 	db	56
   143   001003  39                 	db	57
   144   001004  2F                 	db	47
   145   001005  34                 	db	52
   146   001006  35                 	db	53
   147   001007  36                 	db	54
   148   001008  2A                 	db	42
   149   001009  31                 	db	49
   150   00100A  32                 	db	50
   151   00100B  33                 	db	51
   152   00100C  2D                 	db	45
   153   00100D  23                 	db	35
   154   00100E  30                 	db	48
   155   00100F  3D                 	db	61
   156   001010  2B                 	db	43
   157   001011                     __end_of_btn_values:
   158                           	callstack 0
   159   000000                     _TMR0L	set	4054
   160   000000                     _TMR0H	set	4055
   161   000000                     _INTCON2bits	set	4081
   162   000000                     _EECON2	set	4007
   163   000000                     _ADCON1bits	set	4033
   164   000000                     _ADRESL	set	4035
   165   000000                     _ADRESH	set	4036
   166   000000                     _INTCONbits	set	4082
   167   000000                     _TRISD	set	3989
   168   000000                     _TRISC	set	3988
   169   000000                     _TRISB	set	3987
   170   000000                     _TRISE	set	3990
   171   000000                     _PORTBbits	set	3969
   172   000000                     _PIE1bits	set	3997
   173   000000                     _ADCON2bits	set	4032
   174   000000                     _ADCON0bits	set	4034
   175   000000                     _PORTE	set	3972
   176   000000                     _PORTD	set	3971
   177   000000                     _PORTC	set	3970
   178   000000                     _PORTB	set	3969
   179   000000                     _PORTA	set	3968
   180   000000                     _LATA	set	3977
   181   000000                     _TRISA	set	3986
   182   000000                     _EECON1bits	set	4006
   183   000000                     _EEDATA	set	4008
   184   000000                     _EEADR	set	4009
   185   000000                     _EEADRH	set	4010
   186   000000                     _PIR1bits	set	3998
   187   000000                     _T0CONbits	set	4053
   188   000000                     _INTCON3bits	set	4080
   189   000000                     _LATE	set	3981
   190   000000                     _LATD	set	3980
   191   000000                     _LATC	set	3979
   192   000000                     _LATB	set	3978
   193   001011                     STR_1:
   194   001011  25                 	db	37
   195   001012  69                 	db	105	;'i'
   196   001013  00                 	db	0
   197   001014  00                 	db	0	; dummy byte at the end
   198   000000                     
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202   001732                     __pcinit:
   203                           	callstack 0
   204   001732                     start_initialization:
   205                           	callstack 0
   206   001732                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Initialize objects allocated to COMRAM (41 bytes)
   210                           ; load TBLPTR registers with __pidataCOMRAM
   211   001732  0ECA               	movlw	low __pidataCOMRAM
   212   001734  6EF6               	movwf	tblptrl,c
   213   001736  0E17               	movlw	high __pidataCOMRAM
   214   001738  6EF7               	movwf	tblptrh,c
   215   00173A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   216   00173C  6EF8               	movwf	tblptru,c
   217   00173E  EE00  F001         	lfsr	0,__pdataCOMRAM
   218   001742  EE10 F029          	lfsr	1,41
   219   001746                     copy_data0:
   220   001746  0009               	tblrd		*+
   221   001748  CFF5 FFEE          	movff	tablat,postinc0
   222   00174C  50E5               	movf	postdec1,w,c
   223   00174E  50E1               	movf	fsr1l,w,c
   224   001750  E1FA               	bnz	copy_data0
   225                           
   226                           ; Clear objects allocated to COMRAM (35 bytes)
   227   001752  EE00  F02A         	lfsr	0,__pbssCOMRAM
   228   001756  0E23               	movlw	35
   229   001758                     clear_0:
   230   001758  6AEE               	clrf	postinc0,c
   231   00175A  06E8               	decf	wreg,f,c
   232   00175C  E1FD               	bnz	clear_0
   233   00175E                     end_of_initialization:
   234                           	callstack 0
   235   00175E                     __end_of__initialization:
   236                           	callstack 0
   237   00175E  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   238   001760  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   239   001762  0100               	movlb	0
   240   001764  EF1F  F00C         	goto	_main	;jump to C main() function
   241                           
   242                           	psect	bssCOMRAM
   243   00002A                     __pbssCOMRAM:
   244                           	callstack 0
   245   00002A                     _TIMER0_InterruptHandler:
   246                           	callstack 0
   247   00002A                     	ds	2
   248   00002C                     _timer0_preload:
   249                           	callstack 0
   250   00002C                     	ds	2
   251   00002E                     _RB7_InterruptHandler:
   252                           	callstack 0
   253   00002E                     	ds	2
   254   000030                     _RB6_InterruptHandler:
   255                           	callstack 0
   256   000030                     	ds	2
   257   000032                     _RB5_InterruptHandler:
   258                           	callstack 0
   259   000032                     	ds	2
   260   000034                     _RB4_InterruptHandler:
   261                           	callstack 0
   262   000034                     	ds	2
   263   000036                     _INT2_InterruptHandler:
   264                           	callstack 0
   265   000036                     	ds	2
   266   000038                     _INT1_InterruptHandler:
   267                           	callstack 0
   268   000038                     	ds	2
   269   00003A                     _INT0_InterruptHandler:
   270                           	callstack 0
   271   00003A                     	ds	2
   272   00003C                     _ADC_InterruptHandler:
   273                           	callstack 0
   274   00003C                     	ds	2
   275   00003E                     relay_turn_off@F3047:
   276                           	callstack 0
   277   00003E                     	ds	1
   278   00003F                     relay_turn_on@F3042:
   279                           	callstack 0
   280   00003F                     	ds	1
   281   000040                     relay_initialize@F3037:
   282                           	callstack 0
   283   000040                     	ds	1
   284   000041                     led_toggle_logic@F3058:
   285                           	callstack 0
   286   000041                     	ds	1
   287   000042                     led_turn_off@F3053:
   288                           	callstack 0
   289   000042                     	ds	1
   290   000043                     led_turn_on@F3048:
   291                           	callstack 0
   292   000043                     	ds	1
   293   000044                     led_initialize@F3043:
   294                           	callstack 0
   295   000044                     	ds	1
   296   000045                     Dc_motor_stop@F3067:
   297                           	callstack 0
   298   000045                     	ds	1
   299   000046                     Dc_motor_stop@F3065:
   300                           	callstack 0
   301   000046                     	ds	1
   302   000047                     Dc_motor_turn_right@F3060:
   303                           	callstack 0
   304   000047                     	ds	1
   305   000048                     Dc_motor_turn_right@F3058:
   306                           	callstack 0
   307   000048                     	ds	1
   308   000049                     Dc_motor_turn_left@F3053:
   309                           	callstack 0
   310   000049                     	ds	1
   311   00004A                     Dc_motor_turn_left@F3051:
   312                           	callstack 0
   313   00004A                     	ds	1
   314   00004B                     Dc_motor_initialize@F3044:
   315                           	callstack 0
   316   00004B                     	ds	1
   317   00004C                     Dc_motor_initialize@F3042:
   318                           	callstack 0
   319   00004C                     	ds	1
   320                           
   321                           	psect	dataCOMRAM
   322   000001                     __pdataCOMRAM:
   323                           	callstack 0
   324   000001                     _port_register:
   325                           	callstack 0
   326   000001                     	ds	10
   327   00000B                     _lat_register:
   328                           	callstack 0
   329   00000B                     	ds	10
   330   000015                     _tris_register:
   331                           	callstack 0
   332   000015                     	ds	10
   333   00001F                     _ret:
   334                           	callstack 0
   335   00001F                     	ds	1
   336   000020                     _timer0_obj:
   337                           	callstack 0
   338   000020                     	ds	7
   339   000027                     _led3:
   340                           	callstack 0
   341   000027                     	ds	1
   342   000028                     _led2:
   343                           	callstack 0
   344   000028                     	ds	1
   345   000029                     _led1:
   346                           	callstack 0
   347   000029                     	ds	1
   348                           
   349                           	psect	cstackCOMRAM
   350   00004D                     __pcstackCOMRAM:
   351                           	callstack 0
   352   00004D                     gpio_pin_toggle_logic@_pin_config_t:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x0
   356   00004D                     	ds	2
   357   00004F                     ??_gpio_pin_toggle_logic:
   358                           
   359                           ; 1 bytes @ 0x2
   360   00004F                     	ds	5
   361   000054                     led_toggle_logic@led:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x7
   365   000054                     	ds	2
   366   000056                     ??_led_toggle_logic:
   367                           
   368                           ; 1 bytes @ 0x9
   369   000056                     	ds	1
   370   000057                     led_toggle_logic@pin_obj:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0xA
   374   000057                     	ds	1
   375   000058                     ??_InterruptManager:
   376   000058                     
   377                           ; 1 bytes @ 0xB
   378   000058                     	ds	6
   379   00005E                     gpio_pin_direction_init@_pin_config_t:
   380                           	callstack 0
   381   00005E                     gpio_pin_write_logic@_pin_config_t:
   382                           	callstack 0
   383   00005E                     Timer0_prescaler_config@_timer:
   384                           	callstack 0
   385   00005E                     Timer0_mode_select@_timer:
   386                           	callstack 0
   387   00005E                     Timer0_register_size@_timer:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x11
   391   00005E                     	ds	2
   392   000060                     ??_gpio_pin_direction_init:
   393   000060                     ??_Timer0_prescaler_config:
   394   000060                     gpio_pin_write_logic@logic:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x13
   398   000060                     	ds	1
   399   000061                     ??_gpio_pin_write_logic:
   400   000061                     timer0_init@_timer:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x14
   404   000061                     	ds	2
   405   000063                     ??_timer0_init:
   406                           
   407                           ; 1 bytes @ 0x16
   408   000063                     	ds	2
   409   000065                     timer0_init@ret:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x18
   413   000065                     	ds	1
   414   000066                     gpio_pin_direction_init@ret:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x19
   418   000066                     	ds	1
   419   000067                     gpio_pin_write_logic@ret:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x1A
   423   000067                     	ds	1
   424   000068                     led_initialize@led:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x1B
   428   000068                     	ds	2
   429   00006A                     ??_led_initialize:
   430                           
   431                           ; 1 bytes @ 0x1D
   432   00006A                     	ds	1
   433   00006B                     led_initialize@ret:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x1E
   437   00006B                     	ds	1
   438   00006C                     led_initialize@pin_obj:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x1F
   442   00006C                     	ds	1
   443   00006D                     
   444                           ; 1 bytes @ 0x20
   445 ;;
   446 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   447 ;;
   448 ;; *************** function _main *****************
   449 ;; Defined at:
   450 ;;		line 304 in file "Application.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  2  911[None  ] int 
   457 ;; Registers used:
   458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;Total ram usage:        0 bytes
   469 ;; Hardware stack levels required when called: 8
   470 ;; This function calls:
   471 ;;		_Application_initialize
   472 ;;		_timer0_init
   473 ;; This function is called by:
   474 ;;		Startup code after reset
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	text0
   479   00183E                     __ptext0:
   480                           	callstack 0
   481   00183E                     _main:
   482                           	callstack 23
   483   00183E                     
   484                           ;Application.c: 305:     Application_initialize();
   485   00183E  ECCF  F00B         	call	_Application_initialize	;wreg free
   486   001842                     
   487                           ;Application.c: 306:     ret = timer0_init(&timer0_obj);
   488   001842  0E20               	movlw	low _timer0_obj
   489   001844  6E61               	movwf	timer0_init@_timer^0,c
   490   001846  0E00               	movlw	high _timer0_obj
   491   001848  6E62               	movwf	(timer0_init@_timer+1)^0,c
   492   00184A  EC80  F00A         	call	_timer0_init	;wreg free
   493   00184E  6E1F               	movwf	_ret^0,c
   494   001850                     l912:
   495   001850  EF28  F00C         	goto	l912
   496   001854  EF07  F000         	goto	start
   497   001858                     __end_of_main:
   498                           	callstack 0
   499                           
   500 ;; *************** function _timer0_init *****************
   501 ;; Defined at:
   502 ;;		line 34 in file "MCAL_Layer/TIMER0/TIMER0.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  _timer          2   20[COMRAM] PTR const struct .
   505 ;;		 -> timer0_obj(7), 
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  ret             1   24[COMRAM] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      unsigned char 
   510 ;; Registers used:
   511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   520 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   521 ;;Total ram usage:        5 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; Hardware stack levels required when called: 6
   524 ;; This function calls:
   525 ;;		_Timer0_mode_select
   526 ;;		_Timer0_prescaler_config
   527 ;;		_Timer0_register_size
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text1
   534   001500                     __ptext1:
   535                           	callstack 0
   536   001500                     _timer0_init:
   537                           	callstack 24
   538   001500                     
   539                           ;MCAL_Layer/TIMER0/TIMER0.c: 35:     STD_ReturnType ret = (STD_ReturnType)0x01;
   540   001500  0E01               	movlw	1
   541   001502  6E65               	movwf	timer0_init@ret^0,c
   542   001504                     
   543                           ;MCAL_Layer/TIMER0/TIMER0.c: 36:     if(_timer == ((void*)0)) ret = (STD_ReturnType)0x00
      +                          ;
   544   001504  5061               	movf	timer0_init@_timer^0,w,c
   545   001506  1062               	iorwf	(timer0_init@_timer+1)^0,w,c
   546   001508  A4D8               	btfss	status,2,c
   547   00150A  EF89  F00A         	goto	u2151
   548   00150E  EF8B  F00A         	goto	u2150
   549   001512                     u2151:
   550   001512  EF8F  F00A         	goto	l846
   551   001516                     u2150:
   552   001516  0E00               	movlw	0
   553   001518  6E65               	movwf	timer0_init@ret^0,c
   554   00151A  EFD0  F00A         	goto	l3363
   555   00151E                     l846:
   556                           
   557                           ;MCAL_Layer/TIMER0/TIMER0.c: 39:         (T0CONbits.TMR0ON = 0);
   558   00151E  9ED5               	bcf	213,7,c	;volatile
   559   001520                     
   560                           ;MCAL_Layer/TIMER0/TIMER0.c: 41:         Timer0_prescaler_config(_timer);
   561   001520  C061  F05E         	movff	timer0_init@_timer,Timer0_prescaler_config@_timer
   562   001524  C062  F05F         	movff	timer0_init@_timer+1,Timer0_prescaler_config@_timer+1
   563   001528  EC7A  F00B         	call	_Timer0_prescaler_config	;wreg free
   564                           
   565                           ;MCAL_Layer/TIMER0/TIMER0.c: 43:         Timer0_mode_select(_timer);
   566   00152C  C061  F05E         	movff	timer0_init@_timer,Timer0_mode_select@_timer
   567   001530  C062  F05F         	movff	timer0_init@_timer+1,Timer0_mode_select@_timer+1
   568   001534  EC57  F00B         	call	_Timer0_mode_select	;wreg free
   569                           
   570                           ;MCAL_Layer/TIMER0/TIMER0.c: 45:         Timer0_register_size(_timer);
   571   001538  C061  F05E         	movff	timer0_init@_timer,Timer0_register_size@_timer
   572   00153C  C062  F05F         	movff	timer0_init@_timer+1,Timer0_register_size@_timer+1
   573   001540  EC0D  F00C         	call	_Timer0_register_size	;wreg free
   574   001544                     
   575                           ;MCAL_Layer/TIMER0/TIMER0.c: 47:         TMR0H = (_timer->timer0_preload_value) >> 8;
   576   001544  EE20 F004          	lfsr	2,4
   577   001548  5061               	movf	timer0_init@_timer^0,w,c
   578   00154A  26D9               	addwf	fsr2l,f,c
   579   00154C  5062               	movf	(timer0_init@_timer+1)^0,w,c
   580   00154E  22DA               	addwfc	fsr2h,f,c
   581   001550  CFDE F063          	movff	postinc2,??_timer0_init
   582   001554  CFDD F064          	movff	postdec2,??_timer0_init+1
   583   001558  C064  F063         	movff	??_timer0_init+1,??_timer0_init
   584   00155C  6A64               	clrf	(??_timer0_init+1)^0,c
   585   00155E  5063               	movf	??_timer0_init^0,w,c
   586   001560  6ED7               	movwf	215,c	;volatile
   587   001562                     
   588                           ;MCAL_Layer/TIMER0/TIMER0.c: 48:         TMR0L = (uint8)(_timer->timer0_preload_value);
   589   001562  EE20 F004          	lfsr	2,4
   590   001566  5061               	movf	timer0_init@_timer^0,w,c
   591   001568  26D9               	addwf	fsr2l,f,c
   592   00156A  5062               	movf	(timer0_init@_timer+1)^0,w,c
   593   00156C  22DA               	addwfc	fsr2h,f,c
   594   00156E  50DF               	movf	indf2,w,c
   595   001570  6ED6               	movwf	214,c	;volatile
   596   001572                     
   597                           ;MCAL_Layer/TIMER0/TIMER0.c: 49:         timer0_preload = _timer->timer0_preload_value;
   598   001572  EE20 F004          	lfsr	2,4
   599   001576  5061               	movf	timer0_init@_timer^0,w,c
   600   001578  26D9               	addwf	fsr2l,f,c
   601   00157A  5062               	movf	(timer0_init@_timer+1)^0,w,c
   602   00157C  22DA               	addwfc	fsr2h,f,c
   603   00157E  CFDE F02C          	movff	postinc2,_timer0_preload
   604   001582  CFDD F02D          	movff	postdec2,_timer0_preload+1
   605   001586                     
   606                           ;MCAL_Layer/TIMER0/TIMER0.c: 52:         (INTCONbits.TMR0IE = 1);
   607   001586  8AF2               	bsf	242,5,c	;volatile
   608   001588                     
   609                           ;MCAL_Layer/TIMER0/TIMER0.c: 53:         (INTCONbits.TMR0IF = 0);
   610   001588  94F2               	bcf	242,2,c	;volatile
   611   00158A                     
   612                           ;MCAL_Layer/TIMER0/TIMER0.c: 54:         TIMER0_InterruptHandler = _timer->TIMER0_Interr
      +                          uptHandler;
   613   00158A  C061  FFD9         	movff	timer0_init@_timer,fsr2l
   614   00158E  C062  FFDA         	movff	timer0_init@_timer+1,fsr2h
   615   001592  CFDE F02A          	movff	postinc2,_TIMER0_InterruptHandler
   616   001596  CFDD F02B          	movff	postdec2,_TIMER0_InterruptHandler+1
   617   00159A                     
   618                           ;MCAL_Layer/TIMER0/TIMER0.c: 67:         (INTCONbits.GIE = 1);
   619   00159A  8EF2               	bsf	242,7,c	;volatile
   620   00159C                     
   621                           ;MCAL_Layer/TIMER0/TIMER0.c: 69:         (INTCONbits.PEIE = 1);
   622   00159C  8CF2               	bsf	242,6,c	;volatile
   623   00159E                     
   624                           ;MCAL_Layer/TIMER0/TIMER0.c: 73:         (T0CONbits.TMR0ON = 1);
   625   00159E  8ED5               	bsf	213,7,c	;volatile
   626   0015A0                     l3363:
   627                           
   628                           ;MCAL_Layer/TIMER0/TIMER0.c: 75:     return ret;
   629   0015A0  5065               	movf	timer0_init@ret^0,w,c
   630   0015A2  0012               	return		;funcret
   631   0015A4                     __end_of_timer0_init:
   632                           	callstack 0
   633                           
   634 ;; *************** function _Timer0_register_size *****************
   635 ;; Defined at:
   636 ;;		line 170 in file "MCAL_Layer/TIMER0/TIMER0.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  _timer          2   17[COMRAM] PTR const struct .
   639 ;;		 -> timer0_obj(7), 
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;Total ram usage:        2 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 5
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_timer0_init
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           	psect	text2
   666   00181A                     __ptext2:
   667                           	callstack 0
   668   00181A                     _Timer0_register_size:
   669                           	callstack 24
   670   00181A                     
   671                           ;MCAL_Layer/TIMER0/TIMER0.c: 171:     if(_timer->timer0_reg_size == 1){
   672   00181A  EE20 F006          	lfsr	2,6
   673   00181E  505E               	movf	Timer0_register_size@_timer^0,w,c
   674   001820  26D9               	addwf	fsr2l,f,c
   675   001822  505F               	movf	(Timer0_register_size@_timer+1)^0,w,c
   676   001824  22DA               	addwfc	fsr2h,f,c
   677   001826  A0DF               	btfss	indf2,0,c
   678   001828  EF18  F00C         	goto	u2081
   679   00182C  EF1A  F00C         	goto	u2080
   680   001830                     u2081:
   681   001830  EF1D  F00C         	goto	l884
   682   001834                     u2080:
   683   001834                     
   684                           ;MCAL_Layer/TIMER0/TIMER0.c: 172:         (T0CONbits.T08BIT = 1);
   685   001834  8CD5               	bsf	213,6,c	;volatile
   686                           
   687                           ;MCAL_Layer/TIMER0/TIMER0.c: 173:     }else{
   688   001836  EF1E  F00C         	goto	l886
   689   00183A                     l884:
   690                           
   691                           ;MCAL_Layer/TIMER0/TIMER0.c: 174:         (T0CONbits.T08BIT = 0);
   692   00183A  9CD5               	bcf	213,6,c	;volatile
   693   00183C                     l886:
   694   00183C  0012               	return		;funcret
   695   00183E                     __end_of_Timer0_register_size:
   696                           	callstack 0
   697                           
   698 ;; *************** function _Timer0_prescaler_config *****************
   699 ;; Defined at:
   700 ;;		line 146 in file "MCAL_Layer/TIMER0/TIMER0.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  _timer          2   17[COMRAM] PTR const struct .
   703 ;;		 -> timer0_obj(7), 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   718 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   719 ;;Total ram usage:        3 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; Hardware stack levels required when called: 5
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_timer0_init
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text3
   730   0016F4                     __ptext3:
   731                           	callstack 0
   732   0016F4                     _Timer0_prescaler_config:
   733                           	callstack 24
   734   0016F4                     
   735                           ;MCAL_Layer/TIMER0/TIMER0.c: 147:     if(1 == _timer->prescaler_en){
   736   0016F4  EE20 F006          	lfsr	2,6
   737   0016F8  505E               	movf	Timer0_prescaler_config@_timer^0,w,c
   738   0016FA  26D9               	addwf	fsr2l,f,c
   739   0016FC  505F               	movf	(Timer0_prescaler_config@_timer+1)^0,w,c
   740   0016FE  22DA               	addwfc	fsr2h,f,c
   741   001700  A2DF               	btfss	indf2,1,c
   742   001702  EF85  F00B         	goto	u2051
   743   001706  EF87  F00B         	goto	u2050
   744   00170A                     u2051:
   745   00170A  EF97  F00B         	goto	l872
   746   00170E                     u2050:
   747   00170E                     
   748                           ;MCAL_Layer/TIMER0/TIMER0.c: 148:         (T0CONbits.PSA = 0);;
   749   00170E  96D5               	bcf	213,3,c	;volatile
   750   001710                     
   751                           ;MCAL_Layer/TIMER0/TIMER0.c: 149:         T0CONbits.T0PS = _timer->prescaler_value;
   752   001710  EE20 F003          	lfsr	2,3
   753   001714  505E               	movf	Timer0_prescaler_config@_timer^0,w,c
   754   001716  26D9               	addwf	fsr2l,f,c
   755   001718  505F               	movf	(Timer0_prescaler_config@_timer+1)^0,w,c
   756   00171A  22DA               	addwfc	fsr2h,f,c
   757   00171C  50DF               	movf	indf2,w,c
   758   00171E  6E60               	movwf	??_Timer0_prescaler_config^0,c
   759   001720  50D5               	movf	213,w,c	;volatile
   760   001722  1860               	xorwf	??_Timer0_prescaler_config^0,w,c
   761   001724  0BF8               	andlw	-8
   762   001726  1860               	xorwf	??_Timer0_prescaler_config^0,w,c
   763   001728  6ED5               	movwf	213,c	;volatile
   764                           
   765                           ;MCAL_Layer/TIMER0/TIMER0.c: 150:     }else{
   766   00172A  EF98  F00B         	goto	l874
   767   00172E                     l872:
   768                           
   769                           ;MCAL_Layer/TIMER0/TIMER0.c: 151:         (T0CONbits.PSA = 1);;
   770   00172E  86D5               	bsf	213,3,c	;volatile
   771   001730                     l874:
   772   001730  0012               	return		;funcret
   773   001732                     __end_of_Timer0_prescaler_config:
   774                           	callstack 0
   775                           
   776 ;; *************** function _Timer0_mode_select *****************
   777 ;; Defined at:
   778 ;;		line 156 in file "MCAL_Layer/TIMER0/TIMER0.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  _timer          2   17[COMRAM] PTR const struct .
   781 ;;		 -> timer0_obj(7), 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;Total ram usage:        2 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; Hardware stack levels required when called: 5
   800 ;; This function calls:
   801 ;;		Nothing
   802 ;; This function is called by:
   803 ;;		_timer0_init
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text4
   808   0016AE                     __ptext4:
   809                           	callstack 0
   810   0016AE                     _Timer0_mode_select:
   811                           	callstack 24
   812   0016AE                     
   813                           ;MCAL_Layer/TIMER0/TIMER0.c: 157:     if(1 == _timer->timer0_mode){
   814   0016AE  EE20 F006          	lfsr	2,6
   815   0016B2  505E               	movf	Timer0_mode_select@_timer^0,w,c
   816   0016B4  26D9               	addwf	fsr2l,f,c
   817   0016B6  505F               	movf	(Timer0_mode_select@_timer+1)^0,w,c
   818   0016B8  22DA               	addwfc	fsr2h,f,c
   819   0016BA  A6DF               	btfss	indf2,3,c
   820   0016BC  EF62  F00B         	goto	u2061
   821   0016C0  EF64  F00B         	goto	u2060
   822   0016C4                     u2061:
   823   0016C4  EF67  F00B         	goto	l877
   824   0016C8                     u2060:
   825   0016C8                     
   826                           ;MCAL_Layer/TIMER0/TIMER0.c: 158:         (T0CONbits.T0CS = 0);
   827   0016C8  9AD5               	bcf	213,5,c	;volatile
   828                           
   829                           ;MCAL_Layer/TIMER0/TIMER0.c: 159:     }else{
   830   0016CA  EF79  F00B         	goto	l881
   831   0016CE                     l877:
   832                           
   833                           ;MCAL_Layer/TIMER0/TIMER0.c: 160:         (T0CONbits.T0CS = 1);
   834   0016CE  8AD5               	bsf	213,5,c	;volatile
   835   0016D0                     
   836                           ;MCAL_Layer/TIMER0/TIMER0.c: 161:         if(_timer->timer0_counter_edge == 1){
   837   0016D0  EE20 F006          	lfsr	2,6
   838   0016D4  505E               	movf	Timer0_mode_select@_timer^0,w,c
   839   0016D6  26D9               	addwf	fsr2l,f,c
   840   0016D8  505F               	movf	(Timer0_mode_select@_timer+1)^0,w,c
   841   0016DA  22DA               	addwfc	fsr2h,f,c
   842   0016DC  A4DF               	btfss	indf2,2,c
   843   0016DE  EF73  F00B         	goto	u2071
   844   0016E2  EF75  F00B         	goto	u2070
   845   0016E6                     u2071:
   846   0016E6  EF78  F00B         	goto	l879
   847   0016EA                     u2070:
   848   0016EA                     
   849                           ;MCAL_Layer/TIMER0/TIMER0.c: 162:             (T0CONbits.T0SE = 0);;
   850   0016EA  98D5               	bcf	213,4,c	;volatile
   851                           
   852                           ;MCAL_Layer/TIMER0/TIMER0.c: 163:         }else{
   853   0016EC  EF79  F00B         	goto	l881
   854   0016F0                     l879:
   855                           
   856                           ;MCAL_Layer/TIMER0/TIMER0.c: 164:             (T0CONbits.T0SE = 1);;
   857   0016F0  88D5               	bsf	213,4,c	;volatile
   858   0016F2                     l881:
   859   0016F2  0012               	return		;funcret
   860   0016F4                     __end_of_Timer0_mode_select:
   861                           	callstack 0
   862                           
   863 ;; *************** function _Application_initialize *****************
   864 ;; Defined at:
   865 ;;		line 314 in file "Application.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;Total ram usage:        0 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; Hardware stack levels required when called: 7
   886 ;; This function calls:
   887 ;;		_led_initialize
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text5
   894   00179E                     __ptext5:
   895                           	callstack 0
   896   00179E                     _Application_initialize:
   897                           	callstack 23
   898   00179E                     
   899                           ;Application.c: 315:     ret = led_initialize(&led1);
   900   00179E  0E29               	movlw	low _led1
   901   0017A0  6E68               	movwf	led_initialize@led^0,c
   902   0017A2  0E00               	movlw	high _led1
   903   0017A4  6E69               	movwf	(led_initialize@led+1)^0,c
   904   0017A6  ECD2  F00A         	call	_led_initialize	;wreg free
   905   0017AA  6E1F               	movwf	_ret^0,c
   906                           
   907                           ;Application.c: 316:     ret = led_initialize(&led2);
   908   0017AC  0E28               	movlw	low _led2
   909   0017AE  6E68               	movwf	led_initialize@led^0,c
   910   0017B0  0E00               	movlw	high _led2
   911   0017B2  6E69               	movwf	(led_initialize@led+1)^0,c
   912   0017B4  ECD2  F00A         	call	_led_initialize	;wreg free
   913   0017B8  6E1F               	movwf	_ret^0,c
   914                           
   915                           ;Application.c: 317:     ret = led_initialize(&led3);
   916   0017BA  0E27               	movlw	low _led3
   917   0017BC  6E68               	movwf	led_initialize@led^0,c
   918   0017BE  0E00               	movlw	high _led3
   919   0017C0  6E69               	movwf	(led_initialize@led+1)^0,c
   920   0017C2  ECD2  F00A         	call	_led_initialize	;wreg free
   921   0017C6  6E1F               	movwf	_ret^0,c
   922   0017C8  0012               	return		;funcret
   923   0017CA                     __end_of_Application_initialize:
   924                           	callstack 0
   925                           
   926 ;; *************** function _led_initialize *****************
   927 ;; Defined at:
   928 ;;		line 20 in file "ECU_Layer/Ecu_led.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  led             2   27[COMRAM] PTR const struct .
   931 ;;		 -> led3(1), led2(1), led1(1), 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  pin_obj         1   31[COMRAM] struct .
   934 ;;  ret             1   30[COMRAM] unsigned char 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      unsigned char 
   937 ;; Registers used:
   938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;Total ram usage:        5 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; Hardware stack levels required when called: 6
   951 ;; This function calls:
   952 ;;		_gpio_pin_direction_init
   953 ;;		_gpio_pin_write_logic
   954 ;; This function is called by:
   955 ;;		_Application_initialize
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text6
   960   0015A4                     __ptext6:
   961                           	callstack 0
   962   0015A4                     _led_initialize:
   963                           	callstack 23
   964   0015A4                     
   965                           ;ECU_Layer/Ecu_led.c: 21:     STD_ReturnType ret = (STD_ReturnType)0x01;
   966   0015A4  0E01               	movlw	1
   967   0015A6  6E6B               	movwf	led_initialize@ret^0,c
   968   0015A8                     
   969                           ;ECU_Layer/Ecu_led.c: 22:     if(led == ((void*)0)) ret = (STD_ReturnType)0x00;
   970   0015A8  5068               	movf	led_initialize@led^0,w,c
   971   0015AA  1069               	iorwf	(led_initialize@led+1)^0,w,c
   972   0015AC  A4D8               	btfss	status,2,c
   973   0015AE  EFDB  F00A         	goto	u2031
   974   0015B2  EFDD  F00A         	goto	u2030
   975   0015B6                     u2031:
   976   0015B6  EFE1  F00A         	goto	l283
   977   0015BA                     u2030:
   978   0015BA  0E00               	movlw	0
   979   0015BC  6E6B               	movwf	led_initialize@ret^0,c
   980   0015BE  EF1C  F00B         	goto	l3251
   981   0015C2                     l283:
   982                           
   983                           ;ECU_Layer/Ecu_led.c: 24:        pin_config_t pin_obj = {
   984   0015C2  C044  F06C         	movff	led_initialize@F3043,led_initialize@pin_obj
   985   0015C6  C068  FFD9         	movff	led_initialize@led,fsr2l
   986   0015CA  C069  FFDA         	movff	led_initialize@led+1,fsr2h
   987   0015CE  50DF               	movf	223,w,c
   988   0015D0  0B0F               	andlw	15
   989   0015D2  6E6A               	movwf	??_led_initialize^0,c
   990   0015D4  506C               	movf	led_initialize@pin_obj^0,w,c
   991   0015D6  186A               	xorwf	??_led_initialize^0,w,c
   992   0015D8  0BF8               	andlw	-8
   993   0015DA  186A               	xorwf	??_led_initialize^0,w,c
   994   0015DC  6E6C               	movwf	led_initialize@pin_obj^0,c
   995   0015DE  C068  FFD9         	movff	led_initialize@led,fsr2l
   996   0015E2  C069  FFDA         	movff	led_initialize@led+1,fsr2h
   997   0015E6  38DF               	swapf	223,w,c
   998   0015E8  0B07               	andlw	7
   999   0015EA  6E6A               	movwf	??_led_initialize^0,c
  1000   0015EC  466A               	rlncf	??_led_initialize^0,f,c
  1001   0015EE  466A               	rlncf	??_led_initialize^0,f,c
  1002   0015F0  466A               	rlncf	??_led_initialize^0,f,c
  1003   0015F2  506C               	movf	led_initialize@pin_obj^0,w,c
  1004   0015F4  186A               	xorwf	??_led_initialize^0,w,c
  1005   0015F6  0BC7               	andlw	-57
  1006   0015F8  186A               	xorwf	??_led_initialize^0,w,c
  1007   0015FA  6E6C               	movwf	led_initialize@pin_obj^0,c
  1008   0015FC  9C6C               	bcf	led_initialize@pin_obj^0,6,c
  1009   0015FE  C068  FFD9         	movff	led_initialize@led,fsr2l
  1010   001602  C069  FFDA         	movff	led_initialize@led+1,fsr2h
  1011   001606  AEDF               	btfss	indf2,7,c
  1012   001608  D002               	bra	u2045
  1013   00160A  8E6C               	bsf	led_initialize@pin_obj^0,7,c
  1014   00160C  D001               	bra	u2047
  1015   00160E                     u2045:
  1016   00160E  9E6C               	bcf	led_initialize@pin_obj^0,7,c
  1017   001610                     u2047:
  1018   001610                     
  1019                           ;ECU_Layer/Ecu_led.c: 30:         gpio_pin_direction_init(&pin_obj);
  1020   001610  0E6C               	movlw	low led_initialize@pin_obj
  1021   001612  6E5E               	movwf	gpio_pin_direction_init@_pin_config_t^0,c
  1022   001614  0E00               	movlw	high led_initialize@pin_obj
  1023   001616  6E5F               	movwf	(gpio_pin_direction_init@_pin_config_t+1)^0,c
  1024   001618  ECD2  F008         	call	_gpio_pin_direction_init	;wreg free
  1025   00161C                     
  1026                           ;ECU_Layer/Ecu_led.c: 31:         gpio_pin_write_logic(&pin_obj, led->led_status);
  1027   00161C  0E6C               	movlw	low led_initialize@pin_obj
  1028   00161E  6E5E               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  1029   001620  0E00               	movlw	high led_initialize@pin_obj
  1030   001622  6E5F               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
  1031   001624  C068  FFD9         	movff	led_initialize@led,fsr2l
  1032   001628  C069  FFDA         	movff	led_initialize@led+1,fsr2h
  1033   00162C  0E00               	movlw	0
  1034   00162E  BEDF               	btfsc	indf2,7,c
  1035   001630  0E01               	movlw	1
  1036   001632  6E60               	movwf	gpio_pin_write_logic@logic^0,c
  1037   001634  EC83  F009         	call	_gpio_pin_write_logic	;wreg free
  1038   001638                     l3251:
  1039                           
  1040                           ;ECU_Layer/Ecu_led.c: 33:     return ret;
  1041   001638  506B               	movf	led_initialize@ret^0,w,c
  1042   00163A  0012               	return		;funcret
  1043   00163C                     __end_of_led_initialize:
  1044                           	callstack 0
  1045                           
  1046 ;; *************** function _gpio_pin_write_logic *****************
  1047 ;; Defined at:
  1048 ;;		line 70 in file "MCAL_Layer/hal_gpio.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  _pin_config_    2   17[COMRAM] PTR const struct .
  1051 ;;		 -> relay_turn_off@relayy(1), relay_turn_on@relayy(1), relay_initialize@relayy(1), led_turn_off@pin_obj(1), 
  1052 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), Dc_motor_stop@dc_motor_pin_2(1), Dc_motor_stop@dc_motor_pin_1
      +(1), 
  1053 ;;		 -> Dc_motor_turn_right@dc_motor_pin_2(1), Dc_motor_turn_right@dc_motor_pin_1(1), Dc_motor_turn_left@dc_motor_pin_2(
      +1), Dc_motor_turn_left@dc_motor_pin_1(1), 
  1054 ;;		 -> Dc_motor_initialize@dc_motor_pin_2(1), Dc_motor_initialize@dc_motor_pin_1(1), 
  1055 ;;  logic           1   19[COMRAM] enum E2965
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  ret             1   26[COMRAM] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      unsigned char 
  1060 ;; Registers used:
  1061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1067 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;Total ram usage:       10 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; Hardware stack levels required when called: 5
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_led_initialize
  1078 ;;		_keypad_initialize
  1079 ;;		_keypad_get_value
  1080 ;;		_segment_initialize
  1081 ;;		_segment_write_num
  1082 ;;		_Dc_motor_initialize
  1083 ;;		_Dc_motor_turn_left
  1084 ;;		_Dc_motor_turn_right
  1085 ;;		_Dc_motor_stop
  1086 ;;		_lcd_4_bit_initialize
  1087 ;;		_lcd_4_bit_send_command
  1088 ;;		_lcd_4_bit_send_char_data
  1089 ;;		_lcd_8_bit_initialize
  1090 ;;		_lcd_8_bit_send_command
  1091 ;;		_lcd_8_bit_send_char_data
  1092 ;;		_lcd_4bit_send_t
  1093 ;;		_lcd_8bit_send_t
  1094 ;;		_led_turn_on
  1095 ;;		_led_turn_off
  1096 ;;		_relay_initialize
  1097 ;;		_relay_turn_on
  1098 ;;		_relay_turn_off
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text7
  1103   001306                     __ptext7:
  1104                           	callstack 0
  1105   001306                     _gpio_pin_write_logic:
  1106                           	callstack 23
  1107   001306                     
  1108                           ;MCAL_Layer/hal_gpio.c: 71:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1109   001306  0E01               	movlw	1
  1110   001308  6E67               	movwf	gpio_pin_write_logic@ret^0,c
  1111   00130A                     
  1112                           ;MCAL_Layer/hal_gpio.c: 72:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           5 - 1) || (_pin_config_t->pin > 8 - 1)) ret = (STD_ReturnType)0x00;
  1113   00130A  505E               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1114   00130C  105F               	iorwf	(gpio_pin_write_logic@_pin_config_t+1)^0,w,c
  1115   00130E  B4D8               	btfsc	status,2,c
  1116   001310  EF8C  F009         	goto	u1921
  1117   001314  EF8E  F009         	goto	u1920
  1118   001318                     u1921:
  1119   001318  EFAE  F009         	goto	l3149
  1120   00131C                     u1920:
  1121   00131C  C05E  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1122   001320  C05F  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1123   001324  50DF               	movf	223,w,c
  1124   001326  0B07               	andlw	7
  1125   001328  6E61               	movwf	??_gpio_pin_write_logic^0,c
  1126   00132A  0E05               	movlw	5
  1127   00132C  6061               	cpfslt	??_gpio_pin_write_logic^0,c
  1128   00132E  EF9B  F009         	goto	u1931
  1129   001332  EF9D  F009         	goto	u1930
  1130   001336                     u1931:
  1131   001336  EFAE  F009         	goto	l3149
  1132   00133A                     u1930:
  1133   00133A  C05E  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1134   00133E  C05F  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1135   001342  30DF               	rrcf	223,w,c
  1136   001344  32E8               	rrcf	wreg,f,c
  1137   001346  32E8               	rrcf	wreg,f,c
  1138   001348  0B07               	andlw	7
  1139   00134A  6E61               	movwf	??_gpio_pin_write_logic^0,c
  1140   00134C  0E07               	movlw	7
  1141   00134E  6461               	cpfsgt	??_gpio_pin_write_logic^0,c
  1142   001350  EFAC  F009         	goto	u1941
  1143   001354  EFAE  F009         	goto	u1940
  1144   001358                     u1941:
  1145   001358  EF11  F00A         	goto	l3157
  1146   00135C                     u1940:
  1147   00135C                     l3149:
  1148   00135C  0E00               	movlw	0
  1149   00135E  6E67               	movwf	gpio_pin_write_logic@ret^0,c
  1150   001360  EF26  F00A         	goto	l3159
  1151   001364                     l3151:
  1152                           
  1153                           ;MCAL_Layer/hal_gpio.c: 76:                 (*lat_register[_pin_config_t->port] &= ~(1 <
      +                          < _pin_config_t->pin));
  1154   001364  C05E  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1155   001368  C05F  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1156   00136C  30DF               	rrcf	223,w,c
  1157   00136E  32E8               	rrcf	wreg,f,c
  1158   001370  32E8               	rrcf	wreg,f,c
  1159   001372  0B07               	andlw	7
  1160   001374  6E61               	movwf	??_gpio_pin_write_logic^0,c
  1161   001376  0E01               	movlw	1
  1162   001378  6E62               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1163   00137A  2A61               	incf	??_gpio_pin_write_logic^0,f,c
  1164   00137C  EFC2  F009         	goto	u1954
  1165   001380                     u1955:
  1166   001380  90D8               	bcf	status,0,c
  1167   001382  3662               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1168   001384                     u1954:
  1169   001384  2E61               	decfsz	??_gpio_pin_write_logic^0,f,c
  1170   001386  EFC0  F009         	goto	u1955
  1171   00138A  5062               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1172   00138C  0AFF               	xorlw	255
  1173   00138E  6E63               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1174   001390  C05E  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1175   001394  C05F  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1176   001398  50DF               	movf	223,w,c
  1177   00139A  0B07               	andlw	7
  1178   00139C  6E64               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1179   00139E  5064               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1180   0013A0  0D02               	mullw	2
  1181   0013A2  0E0B               	movlw	low _lat_register
  1182   0013A4  24F3               	addwf	243,w,c
  1183   0013A6  6ED9               	movwf	fsr2l,c
  1184   0013A8  0E00               	movlw	high _lat_register
  1185   0013AA  20F4               	addwfc	prodh,w,c
  1186   0013AC  6EDA               	movwf	fsr2h,c
  1187   0013AE  CFDE F065          	movff	postinc2,??_gpio_pin_write_logic+4
  1188   0013B2  CFDD F066          	movff	postdec2,??_gpio_pin_write_logic+5
  1189   0013B6  C065  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1190   0013BA  C066  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1191   0013BE  5063               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1192   0013C0  16DF               	andwf	indf2,f,c
  1193                           
  1194                           ;MCAL_Layer/hal_gpio.c: 77:                 break;
  1195   0013C2  EF26  F00A         	goto	l3159
  1196   0013C6                     l3153:
  1197                           
  1198                           ;MCAL_Layer/hal_gpio.c: 79:                 (*lat_register[_pin_config_t->port] |= (1 <<
      +                           _pin_config_t->pin));
  1199   0013C6  C05E  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1200   0013CA  C05F  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1201   0013CE  30DF               	rrcf	223,w,c
  1202   0013D0  32E8               	rrcf	wreg,f,c
  1203   0013D2  32E8               	rrcf	wreg,f,c
  1204   0013D4  0B07               	andlw	7
  1205   0013D6  6E61               	movwf	??_gpio_pin_write_logic^0,c
  1206   0013D8  0E01               	movlw	1
  1207   0013DA  6E62               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1208   0013DC  2A61               	incf	??_gpio_pin_write_logic^0,f,c
  1209   0013DE  EFF3  F009         	goto	u1964
  1210   0013E2                     u1965:
  1211   0013E2  90D8               	bcf	status,0,c
  1212   0013E4  3662               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1213   0013E6                     u1964:
  1214   0013E6  2E61               	decfsz	??_gpio_pin_write_logic^0,f,c
  1215   0013E8  EFF1  F009         	goto	u1965
  1216   0013EC  C05E  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1217   0013F0  C05F  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1218   0013F4  50DF               	movf	223,w,c
  1219   0013F6  0B07               	andlw	7
  1220   0013F8  6E63               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1221   0013FA  5063               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1222   0013FC  0D02               	mullw	2
  1223   0013FE  0E0B               	movlw	low _lat_register
  1224   001400  24F3               	addwf	243,w,c
  1225   001402  6ED9               	movwf	fsr2l,c
  1226   001404  0E00               	movlw	high _lat_register
  1227   001406  20F4               	addwfc	prodh,w,c
  1228   001408  6EDA               	movwf	fsr2h,c
  1229   00140A  CFDE F064          	movff	postinc2,??_gpio_pin_write_logic+3
  1230   00140E  CFDD F065          	movff	postdec2,??_gpio_pin_write_logic+4
  1231   001412  C064  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1232   001416  C065  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1233   00141A  5062               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1234   00141C  12DF               	iorwf	indf2,f,c
  1235                           
  1236                           ;MCAL_Layer/hal_gpio.c: 80:                 break;
  1237   00141E  EF26  F00A         	goto	l3159
  1238   001422                     l3157:
  1239   001422  5060               	movf	gpio_pin_write_logic@logic^0,w,c
  1240   001424  6E61               	movwf	??_gpio_pin_write_logic^0,c
  1241   001426  6A62               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1242                           
  1243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1244                           ; Switch size 1, requested type "simple"
  1245                           ; Number of cases is 1, Range of values is 0 to 0
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte            4     3 (average)
  1249                           ;	Chosen strategy is simple_byte
  1250   001428  5062               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1251   00142A  0A00               	xorlw	0	; case 0
  1252   00142C  B4D8               	btfsc	status,2,c
  1253   00142E  EF1B  F00A         	goto	l4015
  1254   001432  EFAE  F009         	goto	l3149
  1255   001436                     l4015:
  1256                           
  1257                           ; Switch size 1, requested type "simple"
  1258                           ; Number of cases is 2, Range of values is 0 to 1
  1259                           ; switch strategies available:
  1260                           ; Name         Instructions Cycles
  1261                           ; simple_byte            7     4 (average)
  1262                           ;	Chosen strategy is simple_byte
  1263   001436  5061               	movf	??_gpio_pin_write_logic^0,w,c
  1264   001438  0A00               	xorlw	0	; case 0
  1265   00143A  B4D8               	btfsc	status,2,c
  1266   00143C  EFB2  F009         	goto	l3151
  1267   001440  0A01               	xorlw	1	; case 1
  1268   001442  B4D8               	btfsc	status,2,c
  1269   001444  EFE3  F009         	goto	l3153
  1270   001448  EFAE  F009         	goto	l3149
  1271   00144C                     l3159:
  1272                           
  1273                           ;MCAL_Layer/hal_gpio.c: 84:     return ret;
  1274   00144C  5067               	movf	gpio_pin_write_logic@ret^0,w,c
  1275   00144E  0012               	return		;funcret
  1276   001450                     __end_of_gpio_pin_write_logic:
  1277                           	callstack 0
  1278                           
  1279 ;; *************** function _gpio_pin_direction_init *****************
  1280 ;; Defined at:
  1281 ;;		line 24 in file "MCAL_Layer/hal_gpio.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  _pin_config_    2   17[COMRAM] PTR const struct .
  1284 ;;		 -> relay_initialize@relayy(1), led_initialize@pin_obj(1), Dc_motor_initialize@dc_motor_pin_2(1), Dc_motor_initializ
      +e@dc_motor_pin_1(1), 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  ret             1   25[COMRAM] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      unsigned char 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;Total ram usage:        9 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 5
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_led_initialize
  1307 ;;		_keypad_initialize
  1308 ;;		_button_initialize
  1309 ;;		_segment_initialize
  1310 ;;		_Dc_motor_initialize
  1311 ;;		_lcd_4_bit_initialize
  1312 ;;		_lcd_8_bit_initialize
  1313 ;;		_relay_initialize
  1314 ;;		_Interrupt_RBx_Init
  1315 ;;		_Interrupt_INTx_Pin
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text8
  1320   0011A4                     __ptext8:
  1321                           	callstack 0
  1322   0011A4                     _gpio_pin_direction_init:
  1323                           	callstack 23
  1324   0011A4                     
  1325                           ;MCAL_Layer/hal_gpio.c: 25:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1326   0011A4  0E01               	movlw	1
  1327   0011A6  6E66               	movwf	gpio_pin_direction_init@ret^0,c
  1328   0011A8                     
  1329                           ;MCAL_Layer/hal_gpio.c: 26:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           (5 - 1)) || (_pin_config_t->pin > (8 - 1))) ret = (STD_ReturnType)0x00;
  1330   0011A8  505E               	movf	gpio_pin_direction_init@_pin_config_t^0,w,c
  1331   0011AA  105F               	iorwf	(gpio_pin_direction_init@_pin_config_t+1)^0,w,c
  1332   0011AC  B4D8               	btfsc	status,2,c
  1333   0011AE  EFDB  F008         	goto	u1851
  1334   0011B2  EFDD  F008         	goto	u1850
  1335   0011B6                     u1851:
  1336   0011B6  EFFD  F008         	goto	l3123
  1337   0011BA                     u1850:
  1338   0011BA  C05E  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1339   0011BE  C05F  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1340   0011C2  50DF               	movf	223,w,c
  1341   0011C4  0B07               	andlw	7
  1342   0011C6  6E60               	movwf	??_gpio_pin_direction_init^0,c
  1343   0011C8  0E05               	movlw	5
  1344   0011CA  6060               	cpfslt	??_gpio_pin_direction_init^0,c
  1345   0011CC  EFEA  F008         	goto	u1861
  1346   0011D0  EFEC  F008         	goto	u1860
  1347   0011D4                     u1861:
  1348   0011D4  EFFD  F008         	goto	l3123
  1349   0011D8                     u1860:
  1350   0011D8  C05E  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1351   0011DC  C05F  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1352   0011E0  30DF               	rrcf	223,w,c
  1353   0011E2  32E8               	rrcf	wreg,f,c
  1354   0011E4  32E8               	rrcf	wreg,f,c
  1355   0011E6  0B07               	andlw	7
  1356   0011E8  6E60               	movwf	??_gpio_pin_direction_init^0,c
  1357   0011EA  0E07               	movlw	7
  1358   0011EC  6460               	cpfsgt	??_gpio_pin_direction_init^0,c
  1359   0011EE  EFFB  F008         	goto	u1871
  1360   0011F2  EFFD  F008         	goto	u1870
  1361   0011F6                     u1871:
  1362   0011F6  EF60  F009         	goto	l3131
  1363   0011FA                     u1870:
  1364   0011FA                     l3123:
  1365   0011FA  0E00               	movlw	0
  1366   0011FC  6E66               	movwf	gpio_pin_direction_init@ret^0,c
  1367   0011FE  EF81  F009         	goto	l3133
  1368   001202                     l3125:
  1369                           
  1370                           ;MCAL_Layer/hal_gpio.c: 30:                 (*tris_register[_pin_config_t->port] &= ~(1 
      +                          << _pin_config_t->pin));
  1371   001202  C05E  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1372   001206  C05F  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1373   00120A  30DF               	rrcf	223,w,c
  1374   00120C  32E8               	rrcf	wreg,f,c
  1375   00120E  32E8               	rrcf	wreg,f,c
  1376   001210  0B07               	andlw	7
  1377   001212  6E60               	movwf	??_gpio_pin_direction_init^0,c
  1378   001214  0E01               	movlw	1
  1379   001216  6E61               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1380   001218  2A60               	incf	??_gpio_pin_direction_init^0,f,c
  1381   00121A  EF11  F009         	goto	u1884
  1382   00121E                     u1885:
  1383   00121E  90D8               	bcf	status,0,c
  1384   001220  3661               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1385   001222                     u1884:
  1386   001222  2E60               	decfsz	??_gpio_pin_direction_init^0,f,c
  1387   001224  EF0F  F009         	goto	u1885
  1388   001228  5061               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1389   00122A  0AFF               	xorlw	255
  1390   00122C  6E62               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1391   00122E  C05E  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1392   001232  C05F  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1393   001236  50DF               	movf	223,w,c
  1394   001238  0B07               	andlw	7
  1395   00123A  6E63               	movwf	(??_gpio_pin_direction_init+3)^0,c
  1396   00123C  5063               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  1397   00123E  0D02               	mullw	2
  1398   001240  0E15               	movlw	low _tris_register
  1399   001242  24F3               	addwf	243,w,c
  1400   001244  6ED9               	movwf	fsr2l,c
  1401   001246  0E00               	movlw	high _tris_register
  1402   001248  20F4               	addwfc	prodh,w,c
  1403   00124A  6EDA               	movwf	fsr2h,c
  1404   00124C  CFDE F064          	movff	postinc2,??_gpio_pin_direction_init+4
  1405   001250  CFDD F065          	movff	postdec2,??_gpio_pin_direction_init+5
  1406   001254  C064  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  1407   001258  C065  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  1408   00125C  5062               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1409   00125E  16DF               	andwf	indf2,f,c
  1410                           
  1411                           ;MCAL_Layer/hal_gpio.c: 31:                 break;
  1412   001260  EF81  F009         	goto	l3133
  1413   001264                     l3127:
  1414                           
  1415                           ;MCAL_Layer/hal_gpio.c: 33:                 (*tris_register[_pin_config_t->port] |= (1 <
      +                          < _pin_config_t->pin));
  1416   001264  C05E  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1417   001268  C05F  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1418   00126C  30DF               	rrcf	223,w,c
  1419   00126E  32E8               	rrcf	wreg,f,c
  1420   001270  32E8               	rrcf	wreg,f,c
  1421   001272  0B07               	andlw	7
  1422   001274  6E60               	movwf	??_gpio_pin_direction_init^0,c
  1423   001276  0E01               	movlw	1
  1424   001278  6E61               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1425   00127A  2A60               	incf	??_gpio_pin_direction_init^0,f,c
  1426   00127C  EF42  F009         	goto	u1894
  1427   001280                     u1895:
  1428   001280  90D8               	bcf	status,0,c
  1429   001282  3661               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1430   001284                     u1894:
  1431   001284  2E60               	decfsz	??_gpio_pin_direction_init^0,f,c
  1432   001286  EF40  F009         	goto	u1895
  1433   00128A  C05E  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1434   00128E  C05F  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1435   001292  50DF               	movf	223,w,c
  1436   001294  0B07               	andlw	7
  1437   001296  6E62               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1438   001298  5062               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1439   00129A  0D02               	mullw	2
  1440   00129C  0E15               	movlw	low _tris_register
  1441   00129E  24F3               	addwf	243,w,c
  1442   0012A0  6ED9               	movwf	fsr2l,c
  1443   0012A2  0E00               	movlw	high _tris_register
  1444   0012A4  20F4               	addwfc	prodh,w,c
  1445   0012A6  6EDA               	movwf	fsr2h,c
  1446   0012A8  CFDE F063          	movff	postinc2,??_gpio_pin_direction_init+3
  1447   0012AC  CFDD F064          	movff	postdec2,??_gpio_pin_direction_init+4
  1448   0012B0  C063  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1449   0012B4  C064  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1450   0012B8  5061               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1451   0012BA  12DF               	iorwf	indf2,f,c
  1452                           
  1453                           ;MCAL_Layer/hal_gpio.c: 34:                 break;
  1454   0012BC  EF81  F009         	goto	l3133
  1455   0012C0                     l3131:
  1456   0012C0  C05E  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1457   0012C4  C05F  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1458   0012C8  BCDF               	btfsc	indf2,6,c
  1459   0012CA  EF69  F009         	goto	u1901
  1460   0012CE  EF6C  F009         	goto	u1900
  1461   0012D2                     u1901:
  1462   0012D2  0E01               	movlw	1
  1463   0012D4  EF6D  F009         	goto	u1910
  1464   0012D8                     u1900:
  1465   0012D8  0E00               	movlw	0
  1466   0012DA                     u1910:
  1467   0012DA  6E60               	movwf	??_gpio_pin_direction_init^0,c
  1468   0012DC  6A61               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1469                           
  1470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1471                           ; Switch size 1, requested type "simple"
  1472                           ; Number of cases is 1, Range of values is 0 to 0
  1473                           ; switch strategies available:
  1474                           ; Name         Instructions Cycles
  1475                           ; simple_byte            4     3 (average)
  1476                           ;	Chosen strategy is simple_byte
  1477   0012DE  5061               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1478   0012E0  0A00               	xorlw	0	; case 0
  1479   0012E2  B4D8               	btfsc	status,2,c
  1480   0012E4  EF76  F009         	goto	l4017
  1481   0012E8  EFFD  F008         	goto	l3123
  1482   0012EC                     l4017:
  1483                           
  1484                           ; Switch size 1, requested type "simple"
  1485                           ; Number of cases is 2, Range of values is 0 to 1
  1486                           ; switch strategies available:
  1487                           ; Name         Instructions Cycles
  1488                           ; simple_byte            7     4 (average)
  1489                           ;	Chosen strategy is simple_byte
  1490   0012EC  5060               	movf	??_gpio_pin_direction_init^0,w,c
  1491   0012EE  0A00               	xorlw	0	; case 0
  1492   0012F0  B4D8               	btfsc	status,2,c
  1493   0012F2  EF01  F009         	goto	l3125
  1494   0012F6  0A01               	xorlw	1	; case 1
  1495   0012F8  B4D8               	btfsc	status,2,c
  1496   0012FA  EF32  F009         	goto	l3127
  1497   0012FE  EFFD  F008         	goto	l3123
  1498   001302                     l3133:
  1499                           
  1500                           ;MCAL_Layer/hal_gpio.c: 38:     return ret;
  1501   001302  5066               	movf	gpio_pin_direction_init@ret^0,w,c
  1502   001304  0012               	return		;funcret
  1503   001306                     __end_of_gpio_pin_direction_init:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _InterruptManager *****************
  1507 ;; Defined at:
  1508 ;;		line 26 in file "MCAL_Layer/Interrupt/hal_manager_interrupt.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;Total ram usage:        6 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; Hardware stack levels required when called: 4
  1529 ;; This function calls:
  1530 ;;		_ADC_ISR
  1531 ;;		_INT0_ISR
  1532 ;;		_INT1_ISR
  1533 ;;		_INT2_ISR
  1534 ;;		_RB4_ISR
  1535 ;;		_RB5_ISR
  1536 ;;		_RB6_ISR
  1537 ;;		_RB7_ISR
  1538 ;;		_TIMER0_ISR
  1539 ;; This function is called by:
  1540 ;;		Interrupt level 2
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	intcode
  1545   000008                     __pintcode:
  1546                           	callstack 0
  1547   000008                     _InterruptManager:
  1548                           	callstack 23
  1549                           
  1550                           ;incstack = 0
  1551   000008  826D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1552   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
  1553                           
  1554                           	psect	intcode_body
  1555   001016                     __pintcode_body:
  1556                           	callstack 23
  1557   001016                     int_func:
  1558                           	callstack 23
  1559   001016  0006               	pop		; remove dummy address from shadow register refresh
  1560   001018  CFFA F058          	movff	pclath,??_InterruptManager
  1561   00101C  CFFB F059          	movff	pclatu,??_InterruptManager+1
  1562   001020  CFD9 F05A          	movff	fsr2l,??_InterruptManager+2
  1563   001024  CFDA F05B          	movff	fsr2h,??_InterruptManager+3
  1564   001028  CFF3 F05C          	movff	prodl,??_InterruptManager+4
  1565   00102C  CFF4 F05D          	movff	prodh,??_InterruptManager+5
  1566   001030                     
  1567                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 27:     if((INTCONbits.INT0IE == 1) && (I
      +                          NTCONbits.INT0IF == 1)) INT0_ISR();
  1568   001030  A8F2               	btfss	242,4,c	;volatile
  1569   001032  EF1D  F008         	goto	i2u270_41
  1570   001036  EF1F  F008         	goto	i2u270_40
  1571   00103A                     i2u270_41:
  1572   00103A  EF28  F008         	goto	i2l3947
  1573   00103E                     i2u270_40:
  1574   00103E  A2F2               	btfss	242,1,c	;volatile
  1575   001040  EF24  F008         	goto	i2u271_41
  1576   001044  EF26  F008         	goto	i2u271_40
  1577   001048                     i2u271_41:
  1578   001048  EF28  F008         	goto	i2l3947
  1579   00104C                     i2u271_40:
  1580   00104C  EC38  F00C         	call	_INT0_ISR	;wreg free
  1581   001050                     i2l3947:
  1582                           
  1583                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 28:     if((INTCON3bits.INT1IE == 1) && (
      +                          INTCON3bits.INT1IF == 1)) INT1_ISR();
  1584   001050  A6F0               	btfss	240,3,c	;volatile
  1585   001052  EF2D  F008         	goto	i2u272_41
  1586   001056  EF2F  F008         	goto	i2u272_40
  1587   00105A                     i2u272_41:
  1588   00105A  EF38  F008         	goto	i2l3953
  1589   00105E                     i2u272_40:
  1590   00105E  A0F0               	btfss	240,0,c	;volatile
  1591   001060  EF34  F008         	goto	i2u273_41
  1592   001064  EF36  F008         	goto	i2u273_40
  1593   001068                     i2u273_41:
  1594   001068  EF38  F008         	goto	i2l3953
  1595   00106C                     i2u273_40:
  1596   00106C  EC36  F00C         	call	_INT1_ISR	;wreg free
  1597   001070                     i2l3953:
  1598                           
  1599                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 29:     if((INTCON3bits.INT2IE == 1) && (
      +                          INTCON3bits.INT2IF == 1)) INT2_ISR();
  1600   001070  A8F0               	btfss	240,4,c	;volatile
  1601   001072  EF3D  F008         	goto	i2u274_41
  1602   001076  EF3F  F008         	goto	i2u274_40
  1603   00107A                     i2u274_41:
  1604   00107A  EF48  F008         	goto	i2l3959
  1605   00107E                     i2u274_40:
  1606   00107E  A2F0               	btfss	240,1,c	;volatile
  1607   001080  EF44  F008         	goto	i2u275_41
  1608   001084  EF46  F008         	goto	i2u275_40
  1609   001088                     i2u275_41:
  1610   001088  EF48  F008         	goto	i2l3959
  1611   00108C                     i2u275_40:
  1612   00108C  EC34  F00C         	call	_INT2_ISR	;wreg free
  1613   001090                     i2l3959:
  1614                           
  1615                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 30:     if((INTCONbits.RBIE == 1) && (INT
      +                          CONbits.RBIF == 1) && (PORTBbits.RB4 == 1)) RB4_ISR();
  1616   001090  A6F2               	btfss	242,3,c	;volatile
  1617   001092  EF4D  F008         	goto	i2u276_41
  1618   001096  EF4F  F008         	goto	i2u276_40
  1619   00109A                     i2u276_41:
  1620   00109A  EF5F  F008         	goto	i2l3967
  1621   00109E                     i2u276_40:
  1622   00109E  A0F2               	btfss	242,0,c	;volatile
  1623   0010A0  EF54  F008         	goto	i2u277_41
  1624   0010A4  EF56  F008         	goto	i2u277_40
  1625   0010A8                     i2u277_41:
  1626   0010A8  EF5F  F008         	goto	i2l3967
  1627   0010AC                     i2u277_40:
  1628   0010AC  A881               	btfss	129,4,c	;volatile
  1629   0010AE  EF5B  F008         	goto	i2u278_41
  1630   0010B2  EF5D  F008         	goto	i2u278_40
  1631   0010B6                     i2u278_41:
  1632   0010B6  EF5F  F008         	goto	i2l3967
  1633   0010BA                     i2u278_40:
  1634   0010BA  EC32  F00C         	call	_RB4_ISR	;wreg free
  1635   0010BE                     i2l3967:
  1636                           
  1637                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 31:     if((INTCONbits.RBIE == 1) && (INT
      +                          CONbits.RBIF == 1) && (PORTBbits.RB5 == 1)) RB5_ISR();
  1638   0010BE  A6F2               	btfss	242,3,c	;volatile
  1639   0010C0  EF64  F008         	goto	i2u279_41
  1640   0010C4  EF66  F008         	goto	i2u279_40
  1641   0010C8                     i2u279_41:
  1642   0010C8  EF76  F008         	goto	i2l3975
  1643   0010CC                     i2u279_40:
  1644   0010CC  A0F2               	btfss	242,0,c	;volatile
  1645   0010CE  EF6B  F008         	goto	i2u280_41
  1646   0010D2  EF6D  F008         	goto	i2u280_40
  1647   0010D6                     i2u280_41:
  1648   0010D6  EF76  F008         	goto	i2l3975
  1649   0010DA                     i2u280_40:
  1650   0010DA  AA81               	btfss	129,5,c	;volatile
  1651   0010DC  EF72  F008         	goto	i2u281_41
  1652   0010E0  EF74  F008         	goto	i2u281_40
  1653   0010E4                     i2u281_41:
  1654   0010E4  EF76  F008         	goto	i2l3975
  1655   0010E8                     i2u281_40:
  1656   0010E8  EC30  F00C         	call	_RB5_ISR	;wreg free
  1657   0010EC                     i2l3975:
  1658                           
  1659                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 32:     if((INTCONbits.RBIE == 1) && (INT
      +                          CONbits.RBIF == 1) && (PORTBbits.RB6 == 1)) RB6_ISR();
  1660   0010EC  A6F2               	btfss	242,3,c	;volatile
  1661   0010EE  EF7B  F008         	goto	i2u282_41
  1662   0010F2  EF7D  F008         	goto	i2u282_40
  1663   0010F6                     i2u282_41:
  1664   0010F6  EF8D  F008         	goto	i2l3983
  1665   0010FA                     i2u282_40:
  1666   0010FA  A0F2               	btfss	242,0,c	;volatile
  1667   0010FC  EF82  F008         	goto	i2u283_41
  1668   001100  EF84  F008         	goto	i2u283_40
  1669   001104                     i2u283_41:
  1670   001104  EF8D  F008         	goto	i2l3983
  1671   001108                     i2u283_40:
  1672   001108  AC81               	btfss	129,6,c	;volatile
  1673   00110A  EF89  F008         	goto	i2u284_41
  1674   00110E  EF8B  F008         	goto	i2u284_40
  1675   001112                     i2u284_41:
  1676   001112  EF8D  F008         	goto	i2l3983
  1677   001116                     i2u284_40:
  1678   001116  EC2E  F00C         	call	_RB6_ISR	;wreg free
  1679   00111A                     i2l3983:
  1680                           
  1681                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 33:     if((INTCONbits.RBIE == 1) && (INT
      +                          CONbits.RBIF == 1) && (PORTBbits.RB7 == 1)) RB7_ISR();
  1682   00111A  A6F2               	btfss	242,3,c	;volatile
  1683   00111C  EF92  F008         	goto	i2u285_41
  1684   001120  EF94  F008         	goto	i2u285_40
  1685   001124                     i2u285_41:
  1686   001124  EFA4  F008         	goto	i2l3991
  1687   001128                     i2u285_40:
  1688   001128  A0F2               	btfss	242,0,c	;volatile
  1689   00112A  EF99  F008         	goto	i2u286_41
  1690   00112E  EF9B  F008         	goto	i2u286_40
  1691   001132                     i2u286_41:
  1692   001132  EFA4  F008         	goto	i2l3991
  1693   001136                     i2u286_40:
  1694   001136  AE81               	btfss	129,7,c	;volatile
  1695   001138  EFA0  F008         	goto	i2u287_41
  1696   00113C  EFA2  F008         	goto	i2u287_40
  1697   001140                     i2u287_41:
  1698   001140  EFA4  F008         	goto	i2l3991
  1699   001144                     i2u287_40:
  1700   001144  EC2C  F00C         	call	_RB7_ISR	;wreg free
  1701   001148                     i2l3991:
  1702                           
  1703                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 34:     if((PIE1bits.ADIE == 1) && (PIR1b
      +                          its.ADIF == 1)) ADC_ISR();
  1704   001148  AC9D               	btfss	157,6,c	;volatile
  1705   00114A  EFA9  F008         	goto	i2u288_41
  1706   00114E  EFAB  F008         	goto	i2u288_40
  1707   001152                     i2u288_41:
  1708   001152  EFB4  F008         	goto	i2l3997
  1709   001156                     i2u288_40:
  1710   001156  AC9E               	btfss	158,6,c	;volatile
  1711   001158  EFB0  F008         	goto	i2u289_41
  1712   00115C  EFB2  F008         	goto	i2u289_40
  1713   001160                     i2u289_41:
  1714   001160  EFB4  F008         	goto	i2l3997
  1715   001164                     i2u289_40:
  1716   001164  EC3A  F00C         	call	_ADC_ISR	;wreg free
  1717   001168                     i2l3997:
  1718                           
  1719                           ;MCAL_Layer/Interrupt/hal_manager_interrupt.c: 35:     if((INTCONbits.TMR0IE == 1) && (I
      +                          NTCONbits.TMR0IF == 1)) TIMER0_ISR();
  1720   001168  AAF2               	btfss	242,5,c	;volatile
  1721   00116A  EFB9  F008         	goto	i2u290_41
  1722   00116E  EFBB  F008         	goto	i2u290_40
  1723   001172                     i2u290_41:
  1724   001172  EFC4  F008         	goto	i2l825
  1725   001176                     i2u290_40:
  1726   001176  A4F2               	btfss	242,2,c	;volatile
  1727   001178  EFC0  F008         	goto	i2u291_41
  1728   00117C  EFC2  F008         	goto	i2u291_40
  1729   001180                     i2u291_41:
  1730   001180  EFC4  F008         	goto	i2l825
  1731   001184                     i2u291_40:
  1732   001184  ECB4  F00B         	call	_TIMER0_ISR	;wreg free
  1733   001188                     i2l825:
  1734   001188  C05D  FFF4         	movff	??_InterruptManager+5,prodh
  1735   00118C  C05C  FFF3         	movff	??_InterruptManager+4,prodl
  1736   001190  C05B  FFDA         	movff	??_InterruptManager+3,fsr2h
  1737   001194  C05A  FFD9         	movff	??_InterruptManager+2,fsr2l
  1738   001198  C059  FFFB         	movff	??_InterruptManager+1,pclatu
  1739   00119C  C058  FFFA         	movff	??_InterruptManager,pclath
  1740   0011A0  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1741   0011A2  0011               	retfie		f
  1742   0011A4                     __end_of_InterruptManager:
  1743                           	callstack 0
  1744                           
  1745 ;; *************** function _TIMER0_ISR *****************
  1746 ;; Defined at:
  1747 ;;		line 135 in file "MCAL_Layer/TIMER0/TIMER0.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 3
  1768 ;; This function calls:
  1769 ;;		Absolute function
  1770 ;;		_timer0_defaultHandler
  1771 ;; This function is called by:
  1772 ;;		_InterruptManager
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text10
  1777   001768                     __ptext10:
  1778                           	callstack 0
  1779   001768                     _TIMER0_ISR:
  1780                           	callstack 23
  1781   001768                     
  1782                           ;MCAL_Layer/TIMER0/TIMER0.c: 136:     (INTCONbits.TMR0IF = 0);
  1783   001768  94F2               	bcf	242,2,c	;volatile
  1784   00176A                     
  1785                           ;MCAL_Layer/TIMER0/TIMER0.c: 137:     TMR0H = (timer0_preload) >> 8;
  1786   00176A  502D               	movf	(_timer0_preload+1)^0,w,c
  1787   00176C  6ED7               	movwf	215,c	;volatile
  1788   00176E                     
  1789                           ;MCAL_Layer/TIMER0/TIMER0.c: 138:     TMR0L = (uint8)(timer0_preload);
  1790   00176E  C02C  FFD6         	movff	_timer0_preload,4054	;volatile
  1791   001772                     
  1792                           ;MCAL_Layer/TIMER0/TIMER0.c: 139:     if(TIMER0_InterruptHandler){
  1793   001772  502A               	movf	_TIMER0_InterruptHandler^0,w,c
  1794   001774  102B               	iorwf	(_TIMER0_InterruptHandler+1)^0,w,c
  1795   001776  B4D8               	btfsc	status,2,c
  1796   001778  EFC0  F00B         	goto	i2u213_41
  1797   00177C  EFC2  F00B         	goto	i2u213_40
  1798   001780                     i2u213_41:
  1799   001780  EFCE  F00B         	goto	i2l869
  1800   001784                     i2u213_40:
  1801   001784                     
  1802                           ;MCAL_Layer/TIMER0/TIMER0.c: 140:         TIMER0_InterruptHandler();
  1803   001784  D802               	call	i2u214_48
  1804   001786  EFCE  F00B         	goto	i2u214_49
  1805   00178A                     i2u214_48:
  1806   00178A  0005               	push	
  1807   00178C  6EFA               	movwf	pclath,c
  1808   00178E  502A               	movf	_TIMER0_InterruptHandler^0,w,c
  1809   001790  6EFD               	movwf	tosl,c
  1810   001792  502B               	movf	(_TIMER0_InterruptHandler+1)^0,w,c
  1811   001794  6EFE               	movwf	tosh,c
  1812   001796  6AFF               	clrf	tosu,c
  1813   001798  50FA               	movf	pclath,w,c
  1814   00179A  0012               	return		;indir
  1815   00179C                     i2u214_49:
  1816   00179C                     i2l869:
  1817   00179C  0012               	return		;funcret
  1818   00179E                     __end_of_TIMER0_ISR:
  1819                           	callstack 0
  1820                           
  1821 ;; *************** function _timer0_defaultHandler *****************
  1822 ;; Defined at:
  1823 ;;		line 289 in file "Application.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;Total ram usage:        0 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 2
  1844 ;; This function calls:
  1845 ;;		_led_toggle_logic
  1846 ;; This function is called by:
  1847 ;;		_TIMER0_ISR
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text11
  1852   0017F4                     __ptext11:
  1853                           	callstack 0
  1854   0017F4                     _timer0_defaultHandler:
  1855                           	callstack 23
  1856   0017F4                     
  1857                           ;Application.c: 290:     led_toggle_logic(&led1);
  1858   0017F4  0E29               	movlw	low _led1
  1859   0017F6  6E54               	movwf	led_toggle_logic@led^0,c
  1860   0017F8  0E00               	movlw	high _led1
  1861   0017FA  6E55               	movwf	(led_toggle_logic@led+1)^0,c
  1862   0017FC  EC1E  F00B         	call	_led_toggle_logic	;wreg free
  1863                           
  1864                           ;Application.c: 291:     led_toggle_logic(&led2);
  1865   001800  0E28               	movlw	low _led2
  1866   001802  6E54               	movwf	led_toggle_logic@led^0,c
  1867   001804  0E00               	movlw	high _led2
  1868   001806  6E55               	movwf	(led_toggle_logic@led+1)^0,c
  1869   001808  EC1E  F00B         	call	_led_toggle_logic	;wreg free
  1870                           
  1871                           ;Application.c: 292:     led_toggle_logic(&led3);
  1872   00180C  0E27               	movlw	low _led3
  1873   00180E  6E54               	movwf	led_toggle_logic@led^0,c
  1874   001810  0E00               	movlw	high _led3
  1875   001812  6E55               	movwf	(led_toggle_logic@led+1)^0,c
  1876   001814  EC1E  F00B         	call	_led_toggle_logic	;wreg free
  1877   001818  0012               	return		;funcret
  1878   00181A                     __end_of_timer0_defaultHandler:
  1879                           	callstack 0
  1880                           
  1881 ;; *************** function _led_toggle_logic *****************
  1882 ;; Defined at:
  1883 ;;		line 70 in file "ECU_Layer/Ecu_led.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  led             2    7[COMRAM] PTR const struct .
  1886 ;;		 -> led3(1), led2(1), led1(1), 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  pin_obj         1   10[COMRAM] struct .
  1889 ;;  ret             1    0        unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      unsigned char 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;Total ram usage:        4 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 1
  1906 ;; This function calls:
  1907 ;;		_gpio_pin_toggle_logic
  1908 ;; This function is called by:
  1909 ;;		_timer0_defaultHandler
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text12
  1914   00163C                     __ptext12:
  1915                           	callstack 0
  1916   00163C                     _led_toggle_logic:
  1917                           	callstack 23
  1918   00163C                     
  1919                           ;ECU_Layer/Ecu_led.c: 72:     if(led == ((void*)0)) ret = (STD_ReturnType)0x00;
  1920   00163C  5054               	movf	led_toggle_logic@led^0,w,c
  1921   00163E  1055               	iorwf	(led_toggle_logic@led+1)^0,w,c
  1922   001640  A4D8               	btfss	status,2,c
  1923   001642  EF25  F00B         	goto	i2u197_41
  1924   001646  EF27  F00B         	goto	i2u197_40
  1925   00164A                     i2u197_41:
  1926   00164A  EF29  F00B         	goto	i2l304
  1927   00164E                     i2u197_40:
  1928   00164E  EF56  F00B         	goto	i2l308
  1929   001652                     i2l304:
  1930                           
  1931                           ;ECU_Layer/Ecu_led.c: 74:        pin_config_t pin_obj = {
  1932   001652  C041  F057         	movff	led_toggle_logic@F3058,led_toggle_logic@pin_obj
  1933   001656  C054  FFD9         	movff	led_toggle_logic@led,fsr2l
  1934   00165A  C055  FFDA         	movff	led_toggle_logic@led+1,fsr2h
  1935   00165E  50DF               	movf	223,w,c
  1936   001660  0B0F               	andlw	15
  1937   001662  6E56               	movwf	??_led_toggle_logic^0,c
  1938   001664  5057               	movf	led_toggle_logic@pin_obj^0,w,c
  1939   001666  1856               	xorwf	??_led_toggle_logic^0,w,c
  1940   001668  0BF8               	andlw	-8
  1941   00166A  1856               	xorwf	??_led_toggle_logic^0,w,c
  1942   00166C  6E57               	movwf	led_toggle_logic@pin_obj^0,c
  1943   00166E  C054  FFD9         	movff	led_toggle_logic@led,fsr2l
  1944   001672  C055  FFDA         	movff	led_toggle_logic@led+1,fsr2h
  1945   001676  38DF               	swapf	223,w,c
  1946   001678  0B07               	andlw	7
  1947   00167A  6E56               	movwf	??_led_toggle_logic^0,c
  1948   00167C  4656               	rlncf	??_led_toggle_logic^0,f,c
  1949   00167E  4656               	rlncf	??_led_toggle_logic^0,f,c
  1950   001680  4656               	rlncf	??_led_toggle_logic^0,f,c
  1951   001682  5057               	movf	led_toggle_logic@pin_obj^0,w,c
  1952   001684  1856               	xorwf	??_led_toggle_logic^0,w,c
  1953   001686  0BC7               	andlw	-57
  1954   001688  1856               	xorwf	??_led_toggle_logic^0,w,c
  1955   00168A  6E57               	movwf	led_toggle_logic@pin_obj^0,c
  1956   00168C  9C57               	bcf	led_toggle_logic@pin_obj^0,6,c
  1957   00168E  C054  FFD9         	movff	led_toggle_logic@led,fsr2l
  1958   001692  C055  FFDA         	movff	led_toggle_logic@led+1,fsr2h
  1959   001696  AEDF               	btfss	indf2,7,c
  1960   001698  D002               	bra	i2u198_45
  1961   00169A  8E57               	bsf	led_toggle_logic@pin_obj^0,7,c
  1962   00169C  D001               	bra	i2u198_47
  1963   00169E                     i2u198_45:
  1964   00169E  9E57               	bcf	led_toggle_logic@pin_obj^0,7,c
  1965   0016A0                     i2u198_47:
  1966   0016A0                     
  1967                           ;ECU_Layer/Ecu_led.c: 80:         gpio_pin_toggle_logic(&pin_obj);
  1968   0016A0  0E57               	movlw	low led_toggle_logic@pin_obj
  1969   0016A2  6E4D               	movwf	gpio_pin_toggle_logic@_pin_config_t^0,c
  1970   0016A4  0E00               	movlw	high led_toggle_logic@pin_obj
  1971   0016A6  6E4E               	movwf	(gpio_pin_toggle_logic@_pin_config_t+1)^0,c
  1972   0016A8  EC28  F00A         	call	_gpio_pin_toggle_logic	;wreg free
  1973   0016AC                     i2l308:
  1974   0016AC  0012               	return		;funcret
  1975   0016AE                     __end_of_led_toggle_logic:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _gpio_pin_toggle_logic *****************
  1979 ;; Defined at:
  1980 ;;		line 114 in file "MCAL_Layer/hal_gpio.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
  1983 ;;		 -> led_toggle_logic@pin_obj(1), 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  ret             1    0        unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      unsigned char 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;Total ram usage:        7 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_led_toggle_logic
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text13
  2009   001450                     __ptext13:
  2010                           	callstack 0
  2011   001450                     _gpio_pin_toggle_logic:
  2012                           	callstack 23
  2013   001450                     
  2014                           ;MCAL_Layer/hal_gpio.c: 116:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port 
      +                          > 5 - 1) || (_pin_config_t->pin > 8 - 1)) ret = (STD_ReturnType)0x00;
  2015   001450  504D               	movf	gpio_pin_toggle_logic@_pin_config_t^0,w,c
  2016   001452  104E               	iorwf	(gpio_pin_toggle_logic@_pin_config_t+1)^0,w,c
  2017   001454  B4D8               	btfsc	status,2,c
  2018   001456  EF2F  F00A         	goto	i2u181_41
  2019   00145A  EF31  F00A         	goto	i2u181_40
  2020   00145E                     i2u181_41:
  2021   00145E  EF51  F00A         	goto	i2l3109
  2022   001462                     i2u181_40:
  2023   001462  C04D  FFD9         	movff	gpio_pin_toggle_logic@_pin_config_t,fsr2l
  2024   001466  C04E  FFDA         	movff	gpio_pin_toggle_logic@_pin_config_t+1,fsr2h
  2025   00146A  50DF               	movf	223,w,c
  2026   00146C  0B07               	andlw	7
  2027   00146E  6E4F               	movwf	??_gpio_pin_toggle_logic^0,c
  2028   001470  0E05               	movlw	5
  2029   001472  604F               	cpfslt	??_gpio_pin_toggle_logic^0,c
  2030   001474  EF3E  F00A         	goto	i2u182_41
  2031   001478  EF40  F00A         	goto	i2u182_40
  2032   00147C                     i2u182_41:
  2033   00147C  EF51  F00A         	goto	i2l3109
  2034   001480                     i2u182_40:
  2035   001480  C04D  FFD9         	movff	gpio_pin_toggle_logic@_pin_config_t,fsr2l
  2036   001484  C04E  FFDA         	movff	gpio_pin_toggle_logic@_pin_config_t+1,fsr2h
  2037   001488  30DF               	rrcf	223,w,c
  2038   00148A  32E8               	rrcf	wreg,f,c
  2039   00148C  32E8               	rrcf	wreg,f,c
  2040   00148E  0B07               	andlw	7
  2041   001490  6E4F               	movwf	??_gpio_pin_toggle_logic^0,c
  2042   001492  0E07               	movlw	7
  2043   001494  644F               	cpfsgt	??_gpio_pin_toggle_logic^0,c
  2044   001496  EF4F  F00A         	goto	i2u183_41
  2045   00149A  EF51  F00A         	goto	i2u183_40
  2046   00149E                     i2u183_41:
  2047   00149E  EF53  F00A         	goto	i2l3111
  2048   0014A2                     i2u183_40:
  2049   0014A2                     i2l3109:
  2050   0014A2  EF7F  F00A         	goto	i2l564
  2051   0014A6                     i2l3111:
  2052                           
  2053                           ;MCAL_Layer/hal_gpio.c: 118:         (*lat_register[_pin_config_t->port] ^= (1 << _pin_c
      +                          onfig_t->pin));
  2054   0014A6  C04D  FFD9         	movff	gpio_pin_toggle_logic@_pin_config_t,fsr2l
  2055   0014AA  C04E  FFDA         	movff	gpio_pin_toggle_logic@_pin_config_t+1,fsr2h
  2056   0014AE  30DF               	rrcf	223,w,c
  2057   0014B0  32E8               	rrcf	wreg,f,c
  2058   0014B2  32E8               	rrcf	wreg,f,c
  2059   0014B4  0B07               	andlw	7
  2060   0014B6  6E4F               	movwf	??_gpio_pin_toggle_logic^0,c
  2061   0014B8  0E01               	movlw	1
  2062   0014BA  6E50               	movwf	(??_gpio_pin_toggle_logic+1)^0,c
  2063   0014BC  2A4F               	incf	??_gpio_pin_toggle_logic^0,f,c
  2064   0014BE  EF63  F00A         	goto	i2u184_44
  2065   0014C2                     i2u184_45:
  2066   0014C2  90D8               	bcf	status,0,c
  2067   0014C4  3650               	rlcf	(??_gpio_pin_toggle_logic+1)^0,f,c
  2068   0014C6                     i2u184_44:
  2069   0014C6  2E4F               	decfsz	??_gpio_pin_toggle_logic^0,f,c
  2070   0014C8  EF61  F00A         	goto	i2u184_45
  2071   0014CC  C04D  FFD9         	movff	gpio_pin_toggle_logic@_pin_config_t,fsr2l
  2072   0014D0  C04E  FFDA         	movff	gpio_pin_toggle_logic@_pin_config_t+1,fsr2h
  2073   0014D4  50DF               	movf	223,w,c
  2074   0014D6  0B07               	andlw	7
  2075   0014D8  6E51               	movwf	(??_gpio_pin_toggle_logic+2)^0,c
  2076   0014DA  5051               	movf	(??_gpio_pin_toggle_logic+2)^0,w,c
  2077   0014DC  0D02               	mullw	2
  2078   0014DE  0E0B               	movlw	low _lat_register
  2079   0014E0  24F3               	addwf	243,w,c
  2080   0014E2  6ED9               	movwf	fsr2l,c
  2081   0014E4  0E00               	movlw	high _lat_register
  2082   0014E6  20F4               	addwfc	prodh,w,c
  2083   0014E8  6EDA               	movwf	fsr2h,c
  2084   0014EA  CFDE F052          	movff	postinc2,??_gpio_pin_toggle_logic+3
  2085   0014EE  CFDD F053          	movff	postdec2,??_gpio_pin_toggle_logic+4
  2086   0014F2  C052  FFD9         	movff	??_gpio_pin_toggle_logic+3,fsr2l
  2087   0014F6  C053  FFDA         	movff	??_gpio_pin_toggle_logic+4,fsr2h
  2088   0014FA  5050               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
  2089   0014FC  1ADF               	xorwf	indf2,f,c
  2090   0014FE                     i2l564:
  2091   0014FE  0012               	return		;funcret
  2092   001500                     __end_of_gpio_pin_toggle_logic:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _RB7_ISR *****************
  2096 ;; Defined at:
  2097 ;;		line 141 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		None
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_InterruptManager
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text14
  2125   001858                     __ptext14:
  2126                           	callstack 0
  2127   001858                     _RB7_ISR:
  2128                           	callstack 26
  2129   001858                     
  2130                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 143:     (INTCONbits.RBIF = 0);
  2131   001858  90F2               	bcf	242,0,c	;volatile
  2132   00185A  0012               	return		;funcret
  2133   00185C                     __end_of_RB7_ISR:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _RB6_ISR *****************
  2137 ;; Defined at:
  2138 ;;		line 130 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		None
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_InterruptManager
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text15
  2166   00185C                     __ptext15:
  2167                           	callstack 0
  2168   00185C                     _RB6_ISR:
  2169                           	callstack 26
  2170   00185C                     
  2171                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 132:     (INTCONbits.RBIF = 0);
  2172   00185C  90F2               	bcf	242,0,c	;volatile
  2173   00185E  0012               	return		;funcret
  2174   001860                     __end_of_RB6_ISR:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _RB5_ISR *****************
  2178 ;; Defined at:
  2179 ;;		line 119 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		None
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;Total ram usage:        0 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_InterruptManager
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text16
  2207   001860                     __ptext16:
  2208                           	callstack 0
  2209   001860                     _RB5_ISR:
  2210                           	callstack 26
  2211   001860                     
  2212                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 121:     (INTCONbits.RBIF = 0);
  2213   001860  90F2               	bcf	242,0,c	;volatile
  2214   001862  0012               	return		;funcret
  2215   001864                     __end_of_RB5_ISR:
  2216                           	callstack 0
  2217                           
  2218 ;; *************** function _RB4_ISR *****************
  2219 ;; Defined at:
  2220 ;;		line 109 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;		None
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		None
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;Total ram usage:        0 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_InterruptManager
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text17
  2248   001864                     __ptext17:
  2249                           	callstack 0
  2250   001864                     _RB4_ISR:
  2251                           	callstack 26
  2252   001864                     
  2253                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 111:     (INTCONbits.RBIF = 0);
  2254   001864  90F2               	bcf	242,0,c	;volatile
  2255   001866  0012               	return		;funcret
  2256   001868                     __end_of_RB4_ISR:
  2257                           	callstack 0
  2258                           
  2259 ;; *************** function _INT2_ISR *****************
  2260 ;; Defined at:
  2261 ;;		line 99 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		None
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_InterruptManager
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text18
  2289   001868                     __ptext18:
  2290                           	callstack 0
  2291   001868                     _INT2_ISR:
  2292                           	callstack 26
  2293   001868                     
  2294                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 101:     (INTCON3bits.INT2F = 0);
  2295   001868  92F0               	bcf	240,1,c	;volatile
  2296   00186A  0012               	return		;funcret
  2297   00186C                     __end_of_INT2_ISR:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _INT1_ISR *****************
  2301 ;; Defined at:
  2302 ;;		line 88 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		None
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_InterruptManager
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text19
  2330   00186C                     __ptext19:
  2331                           	callstack 0
  2332   00186C                     _INT1_ISR:
  2333                           	callstack 26
  2334   00186C                     
  2335                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 90:     (INTCON3bits.INT1F = 0);
  2336   00186C  90F0               	bcf	240,0,c	;volatile
  2337   00186E  0012               	return		;funcret
  2338   001870                     __end_of_INT1_ISR:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _INT0_ISR *****************
  2342 ;; Defined at:
  2343 ;;		line 77 in file "MCAL_Layer/Interrupt/hal_extrenal_interrupt.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		None
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_InterruptManager
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text20
  2371   001870                     __ptext20:
  2372                           	callstack 0
  2373   001870                     _INT0_ISR:
  2374                           	callstack 26
  2375   001870                     
  2376                           ;MCAL_Layer/Interrupt/hal_extrenal_interrupt.c: 79:     (INTCONbits.INT0IF = 0);
  2377   001870  92F2               	bcf	242,1,c	;volatile
  2378   001872  0012               	return		;funcret
  2379   001874                     __end_of_INT0_ISR:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _ADC_ISR *****************
  2383 ;; Defined at:
  2384 ;;		line 268 in file "MCAL_Layer/ADC/hal_adc.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		None
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;Total ram usage:        0 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_InterruptManager
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text21
  2412   001874                     __ptext21:
  2413                           	callstack 0
  2414   001874                     _ADC_ISR:
  2415                           	callstack 26
  2416   001874                     
  2417                           ;MCAL_Layer/ADC/hal_adc.c: 269:     (PIR1bits.ADIF = 0);
  2418   001874  9C9E               	bcf	158,6,c	;volatile
  2419   001876  0012               	return		;funcret
  2420   001878                     __end_of_ADC_ISR:
  2421                           	callstack 0
  2422                           
  2423                           	psect	text22
  2424   000000                     __ptext22:
  2425                           	callstack 0
  2426   000000                     
  2427                           	psect	rparam
  2428   000000                     
  2429                           	psect	temp
  2430   00006D                     btemp:
  2431                           	callstack 0
  2432   00006D                     	ds	1
  2433   000000                     int$flags	set	btemp
  2434   000000                     wtemp8	set	btemp+1
  2435   000000                     ttemp5	set	btemp+1
  2436   000000                     ttemp6	set	btemp+4
  2437   000000                     ttemp7	set	btemp+8
  2438                           
  2439                           	psect	idloc
  2440                           
  2441                           ;Config register IDLOC0 @ 0x200000
  2442                           ;	unspecified, using default values
  2443   200000                     	org	2097152
  2444   200000  FF                 	db	255
  2445                           
  2446                           ;Config register IDLOC1 @ 0x200001
  2447                           ;	unspecified, using default values
  2448   200001                     	org	2097153
  2449   200001  FF                 	db	255
  2450                           
  2451                           ;Config register IDLOC2 @ 0x200002
  2452                           ;	unspecified, using default values
  2453   200002                     	org	2097154
  2454   200002  FF                 	db	255
  2455                           
  2456                           ;Config register IDLOC3 @ 0x200003
  2457                           ;	unspecified, using default values
  2458   200003                     	org	2097155
  2459   200003  FF                 	db	255
  2460                           
  2461                           ;Config register IDLOC4 @ 0x200004
  2462                           ;	unspecified, using default values
  2463   200004                     	org	2097156
  2464   200004  FF                 	db	255
  2465                           
  2466                           ;Config register IDLOC5 @ 0x200005
  2467                           ;	unspecified, using default values
  2468   200005                     	org	2097157
  2469   200005  FF                 	db	255
  2470                           
  2471                           ;Config register IDLOC6 @ 0x200006
  2472                           ;	unspecified, using default values
  2473   200006                     	org	2097158
  2474   200006  FF                 	db	255
  2475                           
  2476                           ;Config register IDLOC7 @ 0x200007
  2477                           ;	unspecified, using default values
  2478   200007                     	org	2097159
  2479   200007  FF                 	db	255
  2480                           
  2481                           	psect	config
  2482                           
  2483                           ; Padding undefined space
  2484   300000                     	org	3145728
  2485   300000  FF                 	db	255
  2486                           
  2487                           ;Config register CONFIG1H @ 0x300001
  2488                           ;	Oscillator Selection bits
  2489                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  2490                           ;	Fail-Safe Clock Monitor Enable bit
  2491                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2492                           ;	Internal/External Oscillator Switchover bit
  2493                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2494   300001                     	org	3145729
  2495   300001  07                 	db	7
  2496                           
  2497                           ;Config register CONFIG2L @ 0x300002
  2498                           ;	Power-up Timer Enable bit
  2499                           ;	PWRT = OFF, PWRT disabled
  2500                           ;	Brown-out Reset Enable bits
  2501                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2502                           ;	Brown Out Reset Voltage bits
  2503                           ;	BORV = 3, Minimum setting
  2504   300002                     	org	3145730
  2505   300002  1F                 	db	31
  2506                           
  2507                           ;Config register CONFIG2H @ 0x300003
  2508                           ;	Watchdog Timer Enable bit
  2509                           ;	WDT = ON, WDT enabled
  2510                           ;	Watchdog Timer Postscale Select bits
  2511                           ;	WDTPS = 32768, 1:32768
  2512   300003                     	org	3145731
  2513   300003  1F                 	db	31
  2514                           
  2515                           ; Padding undefined space
  2516   300004                     	org	3145732
  2517   300004  FF                 	db	255
  2518                           
  2519                           ;Config register CONFIG3H @ 0x300005
  2520                           ;	CCP2 MUX bit
  2521                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2522                           ;	PORTB A/D Enable bit
  2523                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2524                           ;	Low-Power Timer1 Oscillator Enable bit
  2525                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2526                           ;	MCLR Pin Enable bit
  2527                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2528   300005                     	org	3145733
  2529   300005  81                 	db	129
  2530                           
  2531                           ;Config register CONFIG4L @ 0x300006
  2532                           ;	Stack Full/Underflow Reset Enable bit
  2533                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2534                           ;	Single-Supply ICSP Enable bit
  2535                           ;	LVP = ON, Single-Supply ICSP enabled
  2536                           ;	Extended Instruction Set Enable bit
  2537                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2538                           ;	Background Debugger Enable bit
  2539                           ;	DEBUG = 0x1, unprogrammed default
  2540   300006                     	org	3145734
  2541   300006  85                 	db	133
  2542                           
  2543                           ; Padding undefined space
  2544   300007                     	org	3145735
  2545   300007  FF                 	db	255
  2546                           
  2547                           ;Config register CONFIG5L @ 0x300008
  2548                           ;	Code Protection bit
  2549                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2550                           ;	Code Protection bit
  2551                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2552                           ;	Code Protection bit
  2553                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2554                           ;	Code Protection bit
  2555                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2556   300008                     	org	3145736
  2557   300008  0F                 	db	15
  2558                           
  2559                           ;Config register CONFIG5H @ 0x300009
  2560                           ;	Boot Block Code Protection bit
  2561                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2562                           ;	Data EEPROM Code Protection bit
  2563                           ;	CPD = OFF, Data EEPROM not code-protected
  2564   300009                     	org	3145737
  2565   300009  C0                 	db	192
  2566                           
  2567                           ;Config register CONFIG6L @ 0x30000A
  2568                           ;	Write Protection bit
  2569                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2570                           ;	Write Protection bit
  2571                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2572                           ;	Write Protection bit
  2573                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2574                           ;	Write Protection bit
  2575                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2576   30000A                     	org	3145738
  2577   30000A  0F                 	db	15
  2578                           
  2579                           ;Config register CONFIG6H @ 0x30000B
  2580                           ;	Configuration Register Write Protection bit
  2581                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2582                           ;	Boot Block Write Protection bit
  2583                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2584                           ;	Data EEPROM Write Protection bit
  2585                           ;	WRTD = OFF, Data EEPROM not write-protected
  2586   30000B                     	org	3145739
  2587   30000B  E0                 	db	224
  2588                           
  2589                           ;Config register CONFIG7L @ 0x30000C
  2590                           ;	Table Read Protection bit
  2591                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2592                           ;	Table Read Protection bit
  2593                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2594                           ;	Table Read Protection bit
  2595                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2596                           ;	Table Read Protection bit
  2597                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2598   30000C                     	org	3145740
  2599   30000C  0F                 	db	15
  2600                           
  2601                           ;Config register CONFIG7H @ 0x30000D
  2602                           ;	Boot Block Table Read Protection bit
  2603                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2604   30000D                     	org	3145741
  2605   30000D  40                 	db	64
  2606                           tosu	equ	0xFFF
  2607                           tosh	equ	0xFFE
  2608                           tosl	equ	0xFFD
  2609                           stkptr	equ	0xFFC
  2610                           pclatu	equ	0xFFB
  2611                           pclath	equ	0xFFA
  2612                           pcl	equ	0xFF9
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           prodh	equ	0xFF4
  2618                           prodl	equ	0xFF3
  2619                           indf0	equ	0xFEF
  2620                           postinc0	equ	0xFEE
  2621                           postdec0	equ	0xFED
  2622                           preinc0	equ	0xFEC
  2623                           plusw0	equ	0xFEB
  2624                           fsr0h	equ	0xFEA
  2625                           fsr0l	equ	0xFE9
  2626                           wreg	equ	0xFE8
  2627                           indf1	equ	0xFE7
  2628                           postinc1	equ	0xFE6
  2629                           postdec1	equ	0xFE5
  2630                           preinc1	equ	0xFE4
  2631                           plusw1	equ	0xFE3
  2632                           fsr1h	equ	0xFE2
  2633                           fsr1l	equ	0xFE1
  2634                           bsr	equ	0xFE0
  2635                           indf2	equ	0xFDF
  2636                           postinc2	equ	0xFDE
  2637                           postdec2	equ	0xFDD
  2638                           preinc2	equ	0xFDC
  2639                           plusw2	equ	0xFDB
  2640                           fsr2h	equ	0xFDA
  2641                           fsr2l	equ	0xFD9
  2642                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        41
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     32     108
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2569$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2569$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    timer0_obj.TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_defaultHandler(), 

    Timer0_register_size@_timer.TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_defaultHandler(), 

    Timer0_register_size@_timer	PTR const struct . size(2) Largest target is 7
		 -> timer0_obj(COMRAM[7]), 

    Timer0_mode_select@_timer.TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_defaultHandler(), 

    Timer0_mode_select@_timer	PTR const struct . size(2) Largest target is 7
		 -> timer0_obj(COMRAM[7]), 

    Timer0_prescaler_config@_timer.TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_defaultHandler(), 

    Timer0_prescaler_config@_timer	PTR const struct . size(2) Largest target is 7
		 -> timer0_obj(COMRAM[7]), 

    TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_defaultHandler(), Absolute function(), 

    S1882$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_defaultHandler(), 

    timer0_init@_timer.TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_defaultHandler(), 

    timer0_init@_timer	PTR const struct . size(2) Largest target is 7
		 -> timer0_obj(COMRAM[7]), 

    Interrupt_INTx_SetInterruptHandler@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_init@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S1348$Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S1459$Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@interrupt_obj.Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gpio_pin_toggle_logic@_pin_config_t	PTR const struct . size(2) Largest target is 1
		 -> led_toggle_logic@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config_t	PTR const struct . size(2) Largest target is 1
		 -> relay_turn_off@relayy(COMRAM[1]), relay_turn_on@relayy(COMRAM[1]), relay_initialize@relayy(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), Dc_motor_stop@dc_motor_pin_2(COMRAM[1]), Dc_motor_stop@dc_motor_pin_1(COMRAM[1]), 
		 -> Dc_motor_turn_right@dc_motor_pin_2(COMRAM[1]), Dc_motor_turn_right@dc_motor_pin_1(COMRAM[1]), Dc_motor_turn_left@dc_motor_pin_2(COMRAM[1]), Dc_motor_turn_left@dc_motor_pin_1(COMRAM[1]), 
		 -> Dc_motor_initialize@dc_motor_pin_2(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_1(COMRAM[1]), 

    gpio_pin_direction_init@_pin_config_t	PTR const struct . size(2) Largest target is 1
		 -> relay_initialize@relayy(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_2(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_1(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    adc_select_vol_ref@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    adc_select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_GetConversion_Status_Result@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S748$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    led_toggle_logic@led	PTR const struct . size(2) Largest target is 1
		 -> led3(COMRAM[1]), led2(COMRAM[1]), led1(COMRAM[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led3(COMRAM[1]), led2(COMRAM[1]), led1(COMRAM[1]), 

    sp__memset	PTR void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _timer0_init->_Timer0_prescaler_config
    _Application_initialize->_led_initialize
    _led_initialize->_gpio_pin_write_logic

Critical Paths under _InterruptManager in COMRAM

    _timer0_defaultHandler->_led_toggle_logic
    _led_toggle_logic->_gpio_pin_toggle_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12004
             _Application_initialize
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          5     3      2     614
                                             20 COMRAM     5     3      2
                 _Timer0_mode_select
            _Timer0_prescaler_config
               _Timer0_register_size
 ---------------------------------------------------------------------------------
 (2) _Timer0_register_size                                 2     0      2      98
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Timer0_prescaler_config                              3     1      2     120
                                             17 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Timer0_mode_select                                   2     0      2     120
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0   11390
                     _led_initialize
 ---------------------------------------------------------------------------------
 (2) _led_initialize                                       5     3      2   11390
                                             27 COMRAM     5     3      2
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                10     7      3    9321
                                             17 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              9     7      2    1645
                                             17 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManager                                     6     6      0     549
                                             11 COMRAM     6     6      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _TIMER0_ISR
 ---------------------------------------------------------------------------------
 (5) _TIMER0_ISR                                           0     0      0     549
                   Absolute function *
              _timer0_defaultHandler *
 ---------------------------------------------------------------------------------
 (6) _timer0_defaultHandler                                0     0      0     549
                   _led_toggle_logic
 ---------------------------------------------------------------------------------
 (7) _led_toggle_logic                                     5     3      2     549
                                              7 COMRAM     4     2      2
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (8) _gpio_pin_toggle_logic                                8     6      2     194
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RB4_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_initialize
     _led_initialize
       _gpio_pin_direction_init
       _gpio_pin_write_logic
   _timer0_init
     _Timer0_mode_select
     _Timer0_prescaler_config
     _Timer0_register_size

 _InterruptManager (ROOT)
   _ADC_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TIMER0_ISR
     Absolute function(Fake) *
     _timer0_defaultHandler *
       _led_toggle_logic
         _gpio_pin_toggle_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     20      6C       1       85.7%
BITBIGSFRhlhlhh     18      0       0      37        0.0%
BITBIGSFRllhh       15      0       0      39        0.0%
BITBIGSFRhlhll      10      0       0      38        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRllhll       7      0       0      40        0.0%
BITBIGSFRlllhh       6      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6C      44        0.0%
DATA                 0      0      6C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 30 20:10:40 2022

                  ??_InterruptManager 0058                                   l531 1304  
                                 l283 15C2                                   l550 144E  
                                 l287 163A                                   l912 1850  
                                 l913 1850                                   l918 17C8  
                                 l846 151E                                   l872 172E  
                                 l848 15A2                                   l881 16F2  
                                 l874 1730                                   l884 183A  
                                 l877 16CE                                   l886 183C  
                                 l879 16F0                       __end_of_ADC_ISR 1878  
                                 _ret 001F                   led_initialize@F3043 0044  
                                 prod 000FF3                                   tosl 000FFD  
               relay_initialize@F3037 0040                                   wreg 000FE8  
                     __end_of_RB4_ISR 1868                       __end_of_RB5_ISR 1864  
                     __end_of_RB6_ISR 1860                       __end_of_RB7_ISR 185C  
                                l3121 11D8                                  l3131 12C0  
                                l3123 11FA                                  l3115 11A4  
                                l4003 183E                                  l3125 1202  
                                l3133 1302                                  l3117 11A8  
                                l3141 1306                                  l4005 1842  
                                l3127 1264                                  l3119 11BA  
                                l4015 1436                                  l3151 1364  
                                l3143 130A                                  l4017 12EC  
                                l3153 13C6                                  l3145 131C  
                                l3241 15C6                                  l3147 133A  
                                l3243 15FC                                  l3251 1638  
                                l3235 15A4                                  l3157 1422  
                                l3149 135C                                  l3245 15FE  
                                l3237 15A8                                  l3261 16AE  
                                l3341 1516                                  l3159 144C  
                                l3247 1610                                  l3239 15BA  
                                l3263 16C8                                  l3255 16F4  
                                l3271 1834                                  l3351 1586  
                                l3343 1520                                  l3249 161C  
                                l3265 16D0                                  l3257 170E  
                                l3361 159E                                  l3353 1588  
                                l3345 1544                                  l3337 1500  
                                l3267 16EA                                  l3259 1710  
                                l3355 158A                                  l3347 1562  
                                l3363 15A0                                  l3339 1504  
                                l3269 181A                                  l3357 159A  
                                l3349 1572                                  l3367 179E  
                                l3359 159C                                  STR_1 1011  
                                u2030 15BA                                  u2031 15B6  
                                u2050 170E                                  u2051 170A  
                                u2060 16C8                                  u2045 160E  
                                u2061 16C4                                  _LATA 000F89  
                                u2070 16EA                                  u2150 1516  
                                _LATB 000F8A                                  u2047 1610  
                                u2071 16E6                                  u2151 1512  
                                _LATC 000F8B                                  u2080 1834  
                                _LATD 000F8C                                  u2081 1830  
                                _LATE 000F8D                                  u1900 12D8  
                                u1901 12D2                                  u1910 12DA  
                                u1920 131C                                  u1921 1318  
                                u1850 11BA                                  u1930 133A  
                                u1851 11B6                                  u1931 1336  
                                u1860 11D8                                  u1940 135C  
                                u1861 11D4                                  u1941 1358  
                                u1870 11FA                                  u1871 11F6  
                                u1954 1384                                  u1955 1380  
                                u1884 1222                                  u1964 13E6  
                                u1885 121E                                  u1965 13E2  
                                u1894 1284                                  u1895 1280  
                                _led1 0029                                  _led2 0028  
                                _led3 0027                                  _main 183E  
                                fsr2h 000FDA                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
            ?_gpio_pin_direction_init 005E                                  btemp 006D  
              __end_of_led_initialize 163C                                  prodh 000FF4  
                                prodl 000FF3                                  start 000E  
                _RB7_InterruptHandler 002E                          ___param_bank 000000  
              ?_gpio_pin_toggle_logic 004D                  _gpio_pin_write_logic 1306  
                         ?_TIMER0_ISR 004D                      __end_of_INT0_ISR 1874  
                    __end_of_INT1_ISR 1870                      __end_of_INT2_ISR 186C  
              ?_timer0_defaultHandler 004D            __end_of_Timer0_mode_select 16F4  
                               ?_main 004D                                 _EEADR 000FA9  
                               i2l304 1652                                 i2l308 16AC  
                               i2l450 1876                                 i2l640 186E  
                               i2l636 1872                                 i2l644 186A  
                               i2l652 1862                                 i2l660 185A  
                               i2l564 14FE                                 i2l648 1866  
                               i2l656 185E                                 i2l905 1818  
                               i2l825 1188                                 i2l869 179C  
                 relay_turn_off@F3047 003E                                 _TMR0H 000FD7  
                               _TMR0L 000FD6                                 _PORTA 000F80  
                               _PORTB 000F81                                 _PORTC 000F82  
                               _PORTD 000F83                                 _PORTE 000F84  
                               _TRISA 000F92                                 _TRISB 000F93  
                               _TRISC 000F94                                 _TRISD 000F95  
                               _TRISE 000F96       __end_of_Timer0_prescaler_config 1732  
                               pclath 000FFA                                 pclatu 000FFB  
                               tablat 000FF5                                 ttemp5 006E  
                               ttemp6 0071                                 ttemp7 0075  
                               status 000FD8                                 wtemp8 006E  
                     ?_led_initialize 0068                       __initialization 1732  
             led_toggle_logic@pin_obj 0057                          __end_of_main 1858  
               ?_gpio_pin_write_logic 005E                             ??_ADC_ISR 004D  
                              ??_main 006D                         __activetblptr 000003  
                    led_turn_on@F3048 0043                             ??_RB4_ISR 004D  
                           ??_RB5_ISR 004D                             ??_RB6_ISR 004D  
                           ??_RB7_ISR 004D                                _ADRESH 000FC4  
                              _EEADRH 000FAA                                _ADRESL 000FC3  
                              _EEDATA 000FA8                                _EECON2 000FA7  
                              i2l3101 1450                                i2l3111 14A6  
                              i2l3103 1450                                i2l3105 1462  
                              i2l4001 1184                                i2l3107 1480  
                              i2l3109 14A2                                i2l3171 164E  
                              i2l3331 176E                                i2l3173 1656  
                              i2l3333 1772                                i2l1911 1874  
                              i2l3175 168C                                i2l3167 163C  
                              i2l3335 1784                                i2l3327 1768  
                              i2l3177 168E                                i2l3169 163C  
                              i2l3273 17F4                                i2l3329 176A  
                              i2l1915 1870                                i2l1923 1868  
                              i2l1931 1860                                i2l3179 16A0  
                              i2l1919 186C                                i2l1927 1864  
                              i2l1935 185C                                i2l1939 1858  
                              i2l3941 1030                                i2l3951 106C  
                              i2l3943 103E                                i2l3961 109E  
                              i2l3953 1070                                i2l3945 104C  
                              i2l3971 10DA                                i2l3963 10AC  
                              i2l3955 107E                                i2l3947 1050  
                              i2l3981 1116                                i2l3973 10E8  
                              i2l3965 10BA                                i2l3957 108C  
                              i2l3949 105E                                i2l3991 1148  
                              i2l3983 111A                                i2l3975 10EC  
                              i2l3967 10BE                                i2l3959 1090  
                              i2l3993 1156                                i2l3985 1128  
                              i2l3977 10FA                                i2l3969 10CC  
                              i2l3995 1164                                i2l3987 1136  
                              i2l3979 1108                                i2l3997 1168  
                              i2l3989 1144                                i2l3999 1176  
             _TIMER0_InterruptHandler 002A                         _tris_register 0015  
                 led_toggle_logic@led 0054                          ?_timer0_init 0061  
             ?_Application_initialize 004D                                clear_0 1758  
               led_initialize@pin_obj 006C                                isa$std 000001  
                        __pdataCOMRAM 0001                          __mediumconst 0000  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8                            __accesstop 0080  
             __end_of__initialization 175E                             ?_INT0_ISR 004D  
                           ?_INT1_ISR 004D                             ?_INT2_ISR 004D  
                       ___rparam_used 000001                     led_initialize@led 0068  
                   led_initialize@ret 006B            Timer0_register_size@_timer 005E  
              ??_gpio_pin_write_logic 0061                        __pcstackCOMRAM 004D  
      __end_of_Application_initialize 17CA                      _led_toggle_logic 163C  
               _INT0_InterruptHandler 003A                            ??_INT0_ISR 004D  
                          ??_INT1_ISR 004D                            ??_INT2_ISR 004D  
             ??_gpio_pin_toggle_logic 004F               ??_timer0_defaultHandler 0058  
                   led_turn_off@F3053 0042                          ??_TIMER0_ISR 0058  
            Dc_motor_initialize@F3042 004C              Dc_motor_initialize@F3044 004B  
                             _ADC_ISR 1874                               _RB4_ISR 1864  
                             _RB5_ISR 1860                               _RB6_ISR 185C  
                             _RB7_ISR 1858                      ??_led_initialize 006A  
                  _Timer0_mode_select 16AE                            _btn_values 1001  
                  __end_of_TIMER0_ISR 179E              Timer0_mode_select@_timer 005E  
                 ?_Timer0_mode_select 005E                  _ADC_InterruptHandler 003C  
                             __Hparam 0000                               __Lparam 0000  
       Timer0_prescaler_config@_timer 005E                          __psmallconst 1000  
                             __pcinit 1732                               __ramtop 1000  
                             __ptext0 183E                               __ptext1 1500  
                             __ptext2 181A                               __ptext3 16F4  
                             __ptext4 16AE                               __ptext5 179E  
                             __ptext6 15A4                               __ptext7 1306  
                             __ptext8 11A4                             _T0CONbits 000FD5  
                ??_Timer0_mode_select 0060                        __pintcode_body 1016  
                end_of_initialization 175E                               int_func 1016  
   gpio_pin_write_logic@_pin_config_t 005E                            _timer0_obj 0020  
                             postdec1 000FE5                               postdec2 000FDD  
                             postinc0 000FEE                               postinc2 000FDE  
             _Timer0_prescaler_config 16F4                 _INT1_InterruptHandler 0038  
                           _PORTBbits 000F81                      _InterruptManager 0008  
        __end_of_Timer0_register_size 183E                    relay_turn_on@F3042 003F  
  gpio_pin_toggle_logic@_pin_config_t 004D              __end_of_led_toggle_logic 16AE  
             _gpio_pin_direction_init 11A4                         __pidataCOMRAM 17CA  
                      _timer0_preload 002C                   start_initialization 1732  
                _RB4_InterruptHandler 0034                          _lat_register 000B  
           ??_Timer0_prescaler_config 0060         __end_of_gpio_pin_toggle_logic 1500  
                            ?_ADC_ISR 004D         __end_of_timer0_defaultHandler 181A  
                      timer0_init@ret 0065                              ?_RB4_ISR 004D  
                            ?_RB5_ISR 004D                              ?_RB6_ISR 004D  
                            ?_RB7_ISR 004D                           __pbssCOMRAM 002A  
               _INT2_InterruptHandler 0036             ??_gpio_pin_direction_init 0060  
                           __pintcode 0008             gpio_pin_write_logic@logic 0060  
                _Timer0_register_size 181A                           __smallconst 1000  
                            _INT0_ISR 1870                              _INT1_ISR 186C  
                            _INT2_ISR 1868              ??_Application_initialize 006D  
            __end_of_InterruptManager 11A4                              _PIE1bits 000F9D  
                            i2u213_40 1784                              i2u213_41 1780  
                            i2u214_48 178A                              i2u214_49 179C  
                            i2u181_40 1462                              i2u181_41 145E  
                            i2u182_40 1480                              i2u270_40 103E  
                            i2u182_41 147C                              i2u270_41 103A  
                            i2u183_40 14A2                              i2u271_40 104C  
                            i2u183_41 149E                              i2u271_41 1048  
                            i2u280_40 10DA                              i2u272_40 105E  
                            i2u280_41 10D6                              i2u272_41 105A  
                            i2u184_44 14C6                              i2u184_45 14C2  
                            i2u281_40 10E8                              i2u273_40 106C  
                            i2u281_41 10E4                              i2u273_41 1068  
                            _PIR1bits 000F9E                              i2u290_40 1176  
                            i2u282_40 10FA                              i2u274_40 107E  
                            i2u290_41 1172                              i2u282_41 10F6  
                            i2u274_41 107A                              i2u291_40 1184  
                            i2u283_40 1108                              i2u275_40 108C  
                            i2u291_41 1180                              i2u283_41 1104  
                            i2u275_41 1088                              i2u284_40 1116  
                            i2u276_40 109E                              i2u284_41 1112  
                            i2u276_41 109A                              i2u197_40 164E  
                            i2u285_40 1128                              i2u277_40 10AC  
                _RB5_InterruptHandler 0032                              i2u197_41 164A  
                            i2u285_41 1124                              i2u277_41 10A8  
                            i2u286_40 1136                              i2u278_40 10BA  
                            i2u286_41 1132                              i2u278_41 10B6  
                            i2u198_45 169E                              i2u198_47 16A0  
                            i2u287_40 1144                              i2u279_40 10CC  
                            i2u287_41 1140                              i2u279_41 10C8  
                            i2u288_40 1156                              i2u288_41 1152  
                            i2u289_40 1164                              i2u289_41 1160  
                       ??_timer0_init 0063                 ?_Timer0_register_size 005E  
                          _ADCON0bits 000FC2                            _ADCON1bits 000FC1  
                          _ADCON2bits 000FC0                 led_toggle_logic@F3058 0041  
            fp__timer0_defaultHandler 0000       __end_of_gpio_pin_direction_init 1306  
             gpio_pin_write_logic@ret 0067                           _INTCON2bits 000FF1  
                         _INTCON3bits 000FF0                             copy_data0 1746  
                  Dc_motor_stop@F3065 0046                    Dc_motor_stop@F3067 0045  
                          _EECON1bits 000FA6                              __Hrparam 0000  
                            __Lrparam 0000                     ?_led_toggle_logic 0054  
                  ??_led_toggle_logic 0056                    __end_of_btn_values 1011  
                 __end_of_timer0_init 15A4                              __ptext10 1768  
                            __ptext11 17F4                              __ptext20 1870  
                            __ptext12 163C                              __ptext21 1874  
                            __ptext13 1450                              __ptext22 0000  
                            __ptext14 1858                              __ptext15 185C  
                            __ptext16 1860                              __ptext17 1864  
                            __ptext18 1868                              __ptext19 186C  
             Dc_motor_turn_left@F3051 004A               Dc_motor_turn_left@F3053 0049  
                            isa$xinst 000000                              int$flags 006D  
              ??_Timer0_register_size 0060  gpio_pin_direction_init@_pin_config_t 005E  
                          _INTCONbits 000FF2                  _RB6_InterruptHandler 0030  
        __end_of_gpio_pin_write_logic 1450              Dc_motor_turn_right@F3060 0047  
            Dc_motor_turn_right@F3058 0048                              intlevel2 0000  
               _gpio_pin_toggle_logic 1450                           _timer0_init 1500  
                          _TIMER0_ISR 1768                _Application_initialize 179E  
               _timer0_defaultHandler 17F4                     timer0_init@_timer 0061  
          gpio_pin_direction_init@ret 0066                         _port_register 0001  
            ?_Timer0_prescaler_config 005E                     ?_InterruptManager 004D  
                      _led_initialize 15A4  
